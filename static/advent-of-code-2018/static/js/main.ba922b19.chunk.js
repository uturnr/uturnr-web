(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,,function(t,e,n){"use strict";var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(3),p=function(t){function e(){return Object(o.a)(this,e),Object(s.a)(this,Object(a.a)(e).apply(this,arguments))}return Object(r.a)(e,t),Object(i.a)(e,[{key:"render",value:function(){var t=["Perhaps there was a problem with your custom puzzle input.","My apologies!"];return l.a.createElement("div",{className:"PuzzleError mt-4"},l.a.createElement(u.a,{color:"danger"},"There was an error! ","".concat(this.props.customPuzzleInput?t[0]:t[1]," ")))}}]),e}(l.a.Component);e.a=p},,function(t,e,n){var o={"./Day10":23,"./Day10.js":23,"./Day11":24,"./Day11.js":24,"./Day12":25,"./Day12.js":25,"./Day6":26,"./Day6.js":26,"./Day7":27,"./Day7.js":27,"./Day8":28,"./Day8.js":28,"./Day9":29,"./Day9.js":29};function i(t){var e=s(t);return n(e)}function s(t){var e=o[t];if(!(e+1)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return e}i.keys=function(){return Object.keys(o)},i.resolve=s,t.exports=i,i.id=11},,,,,,,,,,,function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){for(var t=this,e=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),o=n(11)("./".concat(e)),i=(this.props.customPuzzleInput?this.props.customPuzzleInput:o.default).split("\n"),s=[],a=0,r=0,c=0,l=0,u=0;u<i.length;u++){var p=/position=<(?: *)([-]?\d*?),(?: *)([-]?\d*?)> velocity=<(?: *)([-]?\d*?),(?: *)([-]?\d*?)>$/g.exec(i[u]),v=Number(p[1]),h=Number(p[2]);v<a&&(a=v),h<r&&(r=h),v>c&&(c=v),h>l&&(l=h);var f={start:[v,h],velocity:[Number(p[3]),Number(p[4])]};s.push(f)}for(var m=Math.abs(a),y=Math.abs(r),b=[],d=0;d<s.length;d++){var g=s[d].start,z=g[0]+m,E=g[1]+y;s[d].start=[z,E],s[d].currentPos=[z,E],b[E]||(b[E]=[]),b[E].push(z)}for(var S,P,O=c+m,j=l+y,k=function(){b=[];for(var e=0;e<s.length;e++){var n=s[e].currentPos[0]-s[e].velocity[0],o=s[e].currentPos[1]-s[e].velocity[1];s[e].currentPos=[n,o],b[o]||(b[o]=[]),b[o].push(n)}!function(){for(var e="",n=0;n<j+y;n++)if(n>=y){for(var o=0;o<O+m;o++)o>=m&&(b[n]&&-1!==b[n].indexOf(o)?e+="#":e+=".");e+="\n"}t.setState({content:e})}()},I=function(){var t,e,n,o;b=[],S=O,P=j;for(var i=0;i<s.length;i++){var a=s[i].currentPos[0]+s[i].velocity[0],r=s[i].currentPos[1]+s[i].velocity[1];s[i].currentPos=[a,r],b[r]||(b[r]=[]),b[r].push(a),(void 0===t||a<t)&&(t=a),(void 0===e||r<e)&&(e=r),(void 0===n||a>n)&&(n=a),(void 0===o||r>o)&&(o=r)}if(j=o-e+1,(O=n-t+1)>S)return O=S,j=P,"fuck";m=t,y=e};;)if("fuck"===I()){k();break}}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){console.log(t),this.setState({hasError:!0})}}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):l.a.createElement("div",null,l.a.createElement("pre",{className:"my-4 monospace"},this.state.content))}}]),e}(l.a.Component);e.default=p},function(t,e,n){"use strict";n.r(e);e.default="position=< 51730, -30721> velocity=<-5,  3>\nposition=< 41413, -30718> velocity=<-4,  3>\nposition=< 10546,  31104> velocity=<-1, -3>\nposition=< 31125, -41028> velocity=<-3,  4>\nposition=< 10522, -41024> velocity=<-1,  4>\nposition=<-20382, -30716> velocity=< 2,  3>\nposition=<-40971, -51332> velocity=< 4,  5>\nposition=<-51291, -20414> velocity=< 5,  2>\nposition=< 10522,  20803> velocity=<-1, -2>\nposition=<-51305,  10495> velocity=< 5, -1>\nposition=< 31170, -20420> velocity=<-3,  2>\nposition=< 41429,  31099> velocity=<-4, -3>\nposition=< 41426,  10493> velocity=<-4, -1>\nposition=< 41433, -20413> velocity=<-4,  2>\nposition=< 41455, -51328> velocity=<-4,  5>\nposition=<-10075, -51324> velocity=< 1,  5>\nposition=< 41434,  20799> velocity=<-4, -2>\nposition=< 10561,  20799> velocity=<-1, -2>\nposition=<-30707, -30716> velocity=< 3,  3>\nposition=< 10536,  31099> velocity=<-1, -3>\nposition=< 20821,  20801> velocity=<-2, -2>\nposition=<-30694, -30719> velocity=< 3,  3>\nposition=< 10522,  41403> velocity=<-1, -4>\nposition=< 31117, -10111> velocity=<-3,  1>\nposition=< 31109,  10494> velocity=<-3, -1>\nposition=<-30715, -41020> velocity=< 3,  4>\nposition=<-41017,  31103> velocity=< 4, -3>\nposition=< 20861,  51714> velocity=<-2, -5>\nposition=< 31125, -51325> velocity=<-3,  5>\nposition=< 20849, -10112> velocity=<-2,  1>\nposition=< 20829, -41027> velocity=<-2,  4>\nposition=<-10054, -51330> velocity=< 1,  5>\nposition=<-20399,  31100> velocity=< 2, -3>\nposition=< 31117,  31105> velocity=<-3, -3>\nposition=< 31113, -51333> velocity=<-3,  5>\nposition=< 31129,  51715> velocity=<-3, -5>\nposition=< 51761,  51712> velocity=<-5, -5>\nposition=< 51746,  31108> velocity=<-5, -3>\nposition=<-10107, -20420> velocity=< 1,  2>\nposition=<-51291, -51329> velocity=< 5,  5>\nposition=<-30691, -10114> velocity=< 3,  1>\nposition=< 31109,  51707> velocity=<-3, -5>\nposition=< 41418,  41404> velocity=<-4, -4>\nposition=< 41440, -51324> velocity=<-4,  5>\nposition=< 31112,  41407> velocity=<-3, -4>\nposition=< 51749, -41029> velocity=<-5,  4>\nposition=<-41019,  31104> velocity=< 4, -3>\nposition=< 41431, -41025> velocity=<-4,  4>\nposition=< 51773, -51333> velocity=<-5,  5>\nposition=< 41413, -41024> velocity=<-4,  4>\nposition=<-41016, -51329> velocity=< 4,  5>\nposition=<-40967,  41407> velocity=< 4, -4>\nposition=<-20398,  41411> velocity=< 2, -4>\nposition=< 20817,  20796> velocity=<-2, -2>\nposition=<-20379, -51327> velocity=< 2,  5>\nposition=<-40985, -10117> velocity=< 4,  1>\nposition=<-40990,  31108> velocity=< 4, -3>\nposition=<-41003,  20802> velocity=< 4, -2>\nposition=<-10086, -20418> velocity=< 1,  2>\nposition=< 41454, -41024> velocity=<-4,  4>\nposition=< 41458,  41406> velocity=<-4, -4>\nposition=<-10067,  51711> velocity=< 1, -5>\nposition=< 10549,  10498> velocity=<-1, -1>\nposition=<-40995, -41029> velocity=< 4,  4>\nposition=< 31118, -20416> velocity=<-3,  2>\nposition=< 10549,  10500> velocity=<-1, -1>\nposition=<-20393,  41407> velocity=< 2, -4>\nposition=< 51774,  10495> velocity=<-5, -1>\nposition=<-10063,  51708> velocity=< 1, -5>\nposition=< 20853,  31107> velocity=<-2, -3>\nposition=<-41019, -20416> velocity=< 4,  2>\nposition=< 10535, -10117> velocity=<-1,  1>\nposition=< 41446, -20421> velocity=<-4,  2>\nposition=<-40985, -41025> velocity=< 4,  4>\nposition=<-20395, -20412> velocity=< 2,  2>\nposition=< 51738, -10117> velocity=<-5,  1>\nposition=< 10546, -51325> velocity=<-1,  5>\nposition=<-10089, -20418> velocity=< 1,  2>\nposition=<-30715, -20415> velocity=< 3,  2>\nposition=<-40982, -30723> velocity=< 4,  3>\nposition=< 41437, -10114> velocity=<-4,  1>\nposition=<-51299, -20417> velocity=< 5,  2>\nposition=< 41463, -20417> velocity=<-4,  2>\nposition=< 41449,  10495> velocity=<-4, -1>\nposition=< 10511,  51712> velocity=<-1, -5>\nposition=<-51262, -30716> velocity=< 5,  3>\nposition=< 51718, -51333> velocity=<-5,  5>\nposition=< 31154,  10497> velocity=<-3, -1>\nposition=< 41437,  51711> velocity=<-4, -5>\nposition=< 20858, -30724> velocity=<-2,  3>\nposition=<-10095,  10492> velocity=< 1, -1>\nposition=< 41473, -20414> velocity=<-4,  2>\nposition=< 10549, -30717> velocity=<-1,  3>\nposition=< 10517,  31103> velocity=<-1, -3>\nposition=<-30667, -10114> velocity=< 3,  1>\nposition=< 31133,  10498> velocity=<-3, -1>\nposition=<-51282, -51332> velocity=< 5,  5>\nposition=< 31141, -51326> velocity=<-3,  5>\nposition=<-20363,  20797> velocity=< 2, -2>\nposition=<-20383, -20412> velocity=< 2,  2>\nposition=<-40982, -30724> velocity=< 4,  3>\nposition=<-20386,  51716> velocity=< 2, -5>\nposition=< 10525, -20421> velocity=<-1,  2>\nposition=<-51320, -51333> velocity=< 5,  5>\nposition=< 31162, -41027> velocity=<-3,  4>\nposition=<-51310, -51330> velocity=< 5,  5>\nposition=< 41461,  31108> velocity=<-4, -3>\nposition=< 10503, -30721> velocity=<-1,  3>\nposition=<-41003,  20799> velocity=< 4, -2>\nposition=< 31117,  41412> velocity=<-3, -4>\nposition=< 51717,  51716> velocity=<-5, -5>\nposition=< 20853,  51707> velocity=<-2, -5>\nposition=< 51766,  51707> velocity=<-5, -5>\nposition=< 20841, -10113> velocity=<-2,  1>\nposition=<-20371,  51714> velocity=< 2, -5>\nposition=< 10546,  31107> velocity=<-1, -3>\nposition=<-40963,  31103> velocity=< 4, -3>\nposition=<-20403, -30718> velocity=< 2,  3>\nposition=< 31141, -20420> velocity=<-3,  2>\nposition=<-20370,  41404> velocity=< 2, -4>\nposition=< 20865, -30725> velocity=<-2,  3>\nposition=< 20862,  20795> velocity=<-2, -2>\nposition=< 41445,  10492> velocity=<-4, -1>\nposition=< 51730, -51327> velocity=<-5,  5>\nposition=< 20842,  31101> velocity=<-2, -3>\nposition=<-51279,  51708> velocity=< 5, -5>\nposition=< 31121,  51712> velocity=<-3, -5>\nposition=< 31154, -10108> velocity=<-3,  1>\nposition=<-51275, -10115> velocity=< 5,  1>\nposition=< 31165, -20413> velocity=<-3,  2>\nposition=<-20376, -30721> velocity=< 2,  3>\nposition=<-10065,  41403> velocity=< 1, -4>\nposition=<-10107, -51325> velocity=< 1,  5>\nposition=<-20353,  41403> velocity=< 2, -4>\nposition=< 20837, -10117> velocity=<-2,  1>\nposition=< 51720,  41403> velocity=<-5, -4>\nposition=<-20363, -41024> velocity=< 2,  4>\nposition=<-30699,  31101> velocity=< 3, -3>\nposition=<-51286,  20798> velocity=< 5, -2>\nposition=<-20350,  31101> velocity=< 2, -3>\nposition=<-51310, -41027> velocity=< 5,  4>\nposition=<-51311, -51328> velocity=< 5,  5>\nposition=< 10512,  51712> velocity=<-1, -5>\nposition=<-30699, -10114> velocity=< 3,  1>\nposition=< 20818,  31105> velocity=<-2, -3>\nposition=< 41417,  41407> velocity=<-4, -4>\nposition=< 20863, -20421> velocity=<-2,  2>\nposition=< 41437,  20803> velocity=<-4, -2>\nposition=<-30699,  10500> velocity=< 3, -1>\nposition=<-51267,  31100> velocity=< 5, -3>\nposition=<-51307, -51333> velocity=< 5,  5>\nposition=< 31150, -41024> velocity=<-3,  4>\nposition=< 51719, -20421> velocity=<-5,  2>\nposition=< 31168,  51707> velocity=<-3, -5>\nposition=<-20352, -10113> velocity=< 2,  1>\nposition=<-20398,  20804> velocity=< 2, -2>\nposition=< 51743, -51324> velocity=<-5,  5>\nposition=< 20857,  51707> velocity=<-2, -5>\nposition=< 51774,  41403> velocity=<-5, -4>\nposition=<-10107, -20420> velocity=< 1,  2>\nposition=<-20363, -20417> velocity=< 2,  2>\nposition=< 31144,  41403> velocity=<-3, -4>\nposition=<-20355, -20414> velocity=< 2,  2>\nposition=<-10075,  51710> velocity=< 1, -5>\nposition=< 41426,  10494> velocity=<-4, -1>\nposition=<-20363, -30717> velocity=< 2,  3>\nposition=< 20837, -51324> velocity=<-2,  5>\nposition=< 10535, -10113> velocity=<-1,  1>\nposition=<-41000, -41024> velocity=< 4,  4>\nposition=< 10552,  51707> velocity=<-1, -5>\nposition=< 20864, -30725> velocity=<-2,  3>\nposition=< 10528, -10108> velocity=<-1,  1>\nposition=<-30694, -10113> velocity=< 3,  1>\nposition=< 51736, -10112> velocity=<-5,  1>\nposition=< 10510, -10116> velocity=<-1,  1>\nposition=< 51768, -41025> velocity=<-5,  4>\nposition=< 41469,  10494> velocity=<-4, -1>\nposition=< 41453, -20418> velocity=<-4,  2>\nposition=<-20371, -20419> velocity=< 2,  2>\nposition=<-40987,  10495> velocity=< 4, -1>\nposition=< 10533, -10115> velocity=<-1,  1>\nposition=<-40998, -20421> velocity=< 4,  2>\nposition=< 20833,  41412> velocity=<-2, -4>\nposition=< 10518,  51709> velocity=<-1, -5>\nposition=<-30654,  51716> velocity=< 3, -5>\nposition=< 51754, -20418> velocity=<-5,  2>\nposition=<-30674, -41028> velocity=< 3,  4>\nposition=< 10541,  10500> velocity=<-1, -1>\nposition=<-10047,  20795> velocity=< 1, -2>\nposition=< 41463,  31099> velocity=<-4, -3>\nposition=< 51733, -51328> velocity=<-5,  5>\nposition=<-41019, -10114> velocity=< 4,  1>\nposition=< 41439, -30716> velocity=<-4,  3>\nposition=< 20826,  51714> velocity=<-2, -5>\nposition=< 41437,  41411> velocity=<-4, -4>\nposition=<-30667, -41029> velocity=< 3,  4>\nposition=< 41429,  20803> velocity=<-4, -2>\nposition=< 41469,  10493> velocity=<-4, -1>\nposition=< 51736,  41409> velocity=<-5, -4>\nposition=< 31168, -51328> velocity=<-3,  5>\nposition=<-30715,  20795> velocity=< 3, -2>\nposition=<-30715, -30723> velocity=< 3,  3>\nposition=< 20816,  41408> velocity=<-2, -4>\nposition=<-30702, -51330> velocity=< 3,  5>\nposition=< 51762,  41410> velocity=<-5, -4>\nposition=<-30659, -51329> velocity=< 3,  5>\nposition=< 51759,  51712> velocity=<-5, -5>\nposition=< 10525, -41025> velocity=<-1,  4>\nposition=< 51738, -20418> velocity=<-5,  2>\nposition=<-30715, -51329> velocity=< 3,  5>\nposition=<-30683, -41025> velocity=< 3,  4>\nposition=< 31159, -20421> velocity=<-3,  2>\nposition=< 20861, -10117> velocity=<-2,  1>\nposition=<-20387,  31105> velocity=< 2, -3>\nposition=<-51302,  10497> velocity=< 5, -1>\nposition=< 51778, -30723> velocity=<-5,  3>\nposition=< 41425, -20416> velocity=<-4,  2>\nposition=< 10538,  41405> velocity=<-1, -4>\nposition=<-10051,  20804> velocity=< 1, -2>\nposition=<-40963, -20416> velocity=< 4,  2>\nposition=<-51302, -51331> velocity=< 5,  5>\nposition=< 41455,  10491> velocity=<-4, -1>\nposition=<-20371, -51328> velocity=< 2,  5>\nposition=<-10075,  20800> velocity=< 1, -2>\nposition=<-51263,  41410> velocity=< 5, -4>\nposition=<-30704, -51328> velocity=< 3,  5>\nposition=< 51766,  20799> velocity=<-5, -2>\nposition=< 20841,  41403> velocity=<-2, -4>\nposition=<-30711, -51329> velocity=< 3,  5>\nposition=< 10537, -30721> velocity=<-1,  3>\nposition=< 10557,  51712> velocity=<-1, -5>\nposition=< 51728, -10117> velocity=<-5,  1>\nposition=< 20866, -10114> velocity=<-2,  1>\nposition=< 20818,  20801> velocity=<-2, -2>\nposition=< 41461, -51330> velocity=<-4,  5>\nposition=<-10064,  10491> velocity=< 1, -1>\nposition=<-10083, -51328> velocity=< 1,  5>\nposition=<-10107, -20421> velocity=< 1,  2>\nposition=< 10502, -41029> velocity=<-1,  4>\nposition=<-51283,  20803> velocity=< 5, -2>\nposition=< 41437, -10108> velocity=<-4,  1>\nposition=<-30667, -20414> velocity=< 3,  2>\nposition=< 41469,  31101> velocity=<-4, -3>\nposition=<-51304,  20801> velocity=< 5, -2>\nposition=< 51730,  10500> velocity=<-5, -1>\nposition=<-10102,  10494> velocity=< 1, -1>\nposition=<-51262,  41412> velocity=< 5, -4>\nposition=<-41015, -51333> velocity=< 4,  5>\nposition=<-40971, -30724> velocity=< 4,  3>\nposition=< 51765, -10108> velocity=<-5,  1>\nposition=<-10094,  31103> velocity=< 1, -3>\nposition=< 10541,  20797> velocity=<-1, -2>\nposition=< 20845, -30720> velocity=<-2,  3>\nposition=< 31113,  10495> velocity=<-3, -1>\nposition=<-20387, -30720> velocity=< 2,  3>\nposition=<-20403, -30721> velocity=< 2,  3>\nposition=< 41429, -41029> velocity=<-4,  4>\nposition=< 10517,  10500> velocity=<-1, -1>\nposition=< 51722, -20420> velocity=<-5,  2>\nposition=< 41445, -10117> velocity=<-4,  1>\nposition=< 51730,  41405> velocity=<-5, -4>\nposition=< 31141,  31102> velocity=<-3, -3>\nposition=< 51774,  41403> velocity=<-5, -4>\nposition=< 20849, -20416> velocity=<-2,  2>\nposition=<-20361, -20421> velocity=< 2,  2>\nposition=< 10553,  10495> velocity=<-1, -1>\nposition=<-10064,  20795> velocity=< 1, -2>\nposition=< 31109,  20797> velocity=<-3, -2>\nposition=<-30696,  10496> velocity=< 3, -1>\nposition=< 41418, -20420> velocity=<-4,  2>\nposition=<-20410, -10117> velocity=< 2,  1>\nposition=< 10558,  10495> velocity=<-1, -1>\nposition=< 20805,  41409> velocity=<-2, -4>\nposition=< 10509, -41026> velocity=<-1,  4>\nposition=< 10553,  41403> velocity=<-1, -4>\nposition=<-30654,  41411> velocity=< 3, -4>\nposition=<-40976,  10496> velocity=< 4, -1>\nposition=<-10099, -41027> velocity=< 1,  4>\nposition=< 10501, -10114> velocity=<-1,  1>\nposition=< 10559,  51711> velocity=<-1, -5>\nposition=< 41474,  51710> velocity=<-4, -5>\nposition=<-51303, -51326> velocity=< 5,  5>\nposition=<-30656, -10112> velocity=< 3,  1>\nposition=< 51768,  41407> velocity=<-5, -4>\nposition=< 51741, -41020> velocity=<-5,  4>\nposition=<-10094, -51325> velocity=< 1,  5>\nposition=<-30699,  31106> velocity=< 3, -3>\nposition=< 51741, -10112> velocity=<-5,  1>\nposition=< 41434, -30724> velocity=<-4,  3>\nposition=< 41450, -30722> velocity=<-4,  3>\nposition=< 20853, -51328> velocity=<-2,  5>\nposition=< 31149, -51329> velocity=<-3,  5>\nposition=<-10051,  51712> velocity=< 1, -5>\nposition=< 20837,  51709> velocity=<-2, -5>\nposition=< 41437, -41022> velocity=<-4,  4>\nposition=<-41019, -10110> velocity=< 4,  1>\nposition=<-20398,  51714> velocity=< 2, -5>\nposition=<-20387,  10491> velocity=< 2, -1>\nposition=< 10525,  31108> velocity=<-1, -3>\nposition=<-40966,  51710> velocity=< 4, -5>\nposition=<-10090,  10493> velocity=< 1, -1>\nposition=< 10557, -51327> velocity=<-1,  5>\nposition=<-51275,  10491> velocity=< 5, -1>\nposition=<-30673, -51333> velocity=< 3,  5>\nposition=<-10107, -20413> velocity=< 1,  2>\nposition=<-10094,  51711> velocity=< 1, -5>\nposition=<-40958,  51708> velocity=< 4, -5>\nposition=< 31130,  41404> velocity=<-3, -4>\nposition=<-10055, -51329> velocity=< 1,  5>\nposition=< 51737,  41411> velocity=<-5, -4>\nposition=< 20822, -30723> velocity=<-2,  3>\nposition=< 31137,  20804> velocity=<-3, -2>\nposition=< 20818,  31104> velocity=<-2, -3>\nposition=< 41458, -20419> velocity=<-4,  2>\nposition=< 41434, -30718> velocity=<-4,  3>\nposition=<-51318, -41027> velocity=< 5,  4>\nposition=< 41416,  51707> velocity=<-4, -5>\nposition=<-51275,  31102> velocity=< 5, -3>\nposition=< 20845, -30719> velocity=<-2,  3>\nposition=< 10546,  20801> velocity=<-1, -2>\nposition=< 20826,  51716> velocity=<-2, -5>\nposition=<-41019, -41021> velocity=< 4,  4>\nposition=< 31152, -10112> velocity=<-3,  1>\nposition=< 10557,  31101> velocity=<-1, -3>\nposition=< 41458,  41407> velocity=<-4, -4>\nposition=< 41429,  10496> velocity=<-4, -1>\nposition=<-30659, -10108> velocity=< 3,  1>\nposition=< 51767,  41407> velocity=<-5, -4>\nposition=< 51752, -41025> velocity=<-5,  4>\nposition=<-41017,  31099> velocity=< 4, -3>\nposition=< 10534, -51329> velocity=<-1,  5>\nposition=<-10075, -20418> velocity=< 1,  2>\nposition=< 41423, -10112> velocity=<-4,  1>\nposition=<-51286,  10492> velocity=< 5, -1>\nposition=<-51315,  20800> velocity=< 5, -2>\nposition=< 20850,  51715> velocity=<-2, -5>\nposition=<-20398, -51325> velocity=< 2,  5>\nposition=< 51776, -41024> velocity=<-5,  4>\nposition=<-30667,  51713> velocity=< 3, -5>\nposition=< 10561, -30719> velocity=<-1,  3>\nposition=< 10512, -41029> velocity=<-1,  4>\nposition=< 31169, -30718> velocity=<-3,  3>\nposition=< 51722,  51709> velocity=<-5, -5>\nposition=<-51315,  41412> velocity=< 5, -4>\nposition=<-51299, -41028> velocity=< 5,  4>\nposition=< 20826,  41408> velocity=<-2, -4>\nposition=<-20371, -10114> velocity=< 2,  1>\nposition=< 41429,  41405> velocity=<-4, -4>\nposition=< 20853, -51328> velocity=<-2,  5>\nposition=<-51286,  20796> velocity=< 5, -2>\nposition=<-51291,  10496> velocity=< 5, -1>\nposition=< 20826, -20413> velocity=<-2,  2>\nposition=< 20845,  20798> velocity=<-2, -2>\nposition=<-10048, -10113> velocity=< 1,  1>\nposition=<-10099, -30717> velocity=< 1,  3>\nposition=<-41009, -20421> velocity=< 4,  2>\nposition=< 31110,  41407> velocity=<-3, -4>\nposition=< 20861, -51326> velocity=<-2,  5>\nposition=< 20826, -20413> velocity=<-2,  2>\nposition=<-10055,  31099> velocity=< 1, -3>\nposition=< 20837, -51325> velocity=<-2,  5>\nposition=< 20866,  51710> velocity=<-2, -5>\nposition=< 20858, -20420> velocity=<-2,  2>\nposition=< 31130, -51332> velocity=<-3,  5>\nposition=<-10074, -51333> velocity=< 1,  5>\nposition=< 20813,  10495> velocity=<-2, -1>\nposition=< 31162, -51331> velocity=<-3,  5>\nposition=<-30698,  51708> velocity=< 3, -5>"},function(t,e,n){"use strict";n.r(e);e.default="1955"},function(t,e,n){"use strict";n.r(e);e.default="initial state: #.#.#..##.#....#.#.##..##.##..#..#...##....###..#......###.#..#.....#.###.#...#####.####...#####.#.#\n\n..#.. => .\n#...# => .\n.#... => #\n#.##. => .\n..#.# => #\n#.#.# => .\n###.. => #\n###.# => #\n..... => .\n....# => .\n.##.. => #\n##### => .\n####. => .\n..##. => .\n##.#. => #\n.#..# => #\n##..# => .\n.##.# => .\n.#### => #\n..### => .\n...## => #\n#..## => #\n#.... => .\n##.## => .\n#.#.. => .\n##... => .\n.#.## => #\n.###. => #\n...#. => .\n#.### => .\n#..#. => #\n.#.#. => ."},function(t,e,n){"use strict";n.r(e),n.d(e,"emojis",function(){return o});var o=["\ud83d\ude00","\ud83d\ude0d","\ud83d\ude18","\ud83d\ude2b","\ud83d\ude16","\ud83e\udd2d","\ud83d\ude28","\ud83d\udc69","\ud83d\udd2c","\ud83e\uddd9\u200d","\ud83e\udddc","\ud83d\ude4e","\ud83e\uddd9","\ud83e\udd81","\ud83e\udd8b","\ud83c\udf32","\ud83d\udc34","\ud83d\udc33","\ud83d\udc13","\ud83e\udd83","\ud83d\udc12","\ud83d\udc18","\ud83c\udf12","\ud83c\udfd3","\ud83c\udf5a","\ud83c\udf7a","\ud83e\udd54","\ud83c\udf73","\ud83c\udf52","\ud83e\udd3c","\ud83e\udd48","\ud83c\udfaa","\ud83e\udd4a","\ud83e\udd49","\ud83c\udfc6","\ud83d\udeb5","\ud83c\udfcb","\ud83c\udfbe","\ud83c\udfd3","\ud83c\udfa2","\ud83d\ude8f","\ud83d\udee9","\ud83d\uddff","\ud83c\udfd8","\ud83d\udea7","\ud83d\ude84","\ud83c\udfd5","\ud83d\ude8b","\ud83d\udd29","\ud83d\udecc","\u2696","\ud83d\udc8c","\ud83d\udcef","\ud83d\udcda","\u2694","\ud83d\udde1","\ud83d\udd2a","\ud83c\ude51","\ud83c\ude33","\ud83c\udd97","\u274e","\ud83c\ude35","\ud83d\udead","\ud83c\uddf8\ud83c\uddf9","\ud83c\uddf7\ud83c\uddfa","\ud83c\uddf3\ud83c\udde8","\ud83c\uddf5\ud83c\uddf7","\ud83c\udde9\ud83c\uddf2","\ud83c\uddf3\ud83c\uddea","\ud83c\uddec\ud83c\uddea","\ud83c\uddf9\ud83c\uddeb","\ud83d\ude2e","\ud83d\ude26","\ud83d\udd90","\ud83e\udde0","\ud83d\udc40","\ud83d\udc41","\ud83d\udc81","\ud83d\udc69","\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66","\ud83d\udc59","\ud83d\udc57","\ud83d\udc7f","\ud83d\udc80","\ud83d\udc87","\ud83d\udc69","\u200d\u200d\ud83c\udf1e","\ud83c\udf08","\ud83c\udf2a","\ud83d\udd25","\ud83c\udf5f","\ud83c\udf46","\ud83c\udfb1","\ud83c\udfce","\ud83c\udfe9","\ud83d\udc92","\u26ea","\ud83d\udee5","\ud83c\udfca","\u274c"];e.default="158, 163\n287, 68\n76, 102\n84, 244\n162, 55\n272, 335\n345, 358\n210, 211\n343, 206\n219, 323\n260, 238\n83, 94\n137, 340\n244, 172\n335, 307\n52, 135\n312, 109\n276, 93\n288, 274\n173, 211\n125, 236\n200, 217\n339, 56\n286, 134\n310, 192\n169, 192\n313, 106\n331, 186\n40, 236\n194, 122\n244, 76\n159, 282\n161, 176\n262, 279\n184, 93\n337, 284\n346, 342\n283, 90\n279, 162\n112, 244\n49, 254\n63, 176\n268, 145\n334, 336\n278, 176\n353, 135\n282, 312\n96, 85\n90, 105\n354, 312"},function(t,e,n){"use strict";n.r(e);e.default="Step L must be finished before step A can begin.\nStep P must be finished before step F can begin.\nStep V must be finished before step U can begin.\nStep F must be finished before step S can begin.\nStep A must be finished before step J can begin.\nStep R must be finished before step K can begin.\nStep Z must be finished before step T can begin.\nStep G must be finished before step W can begin.\nStep H must be finished before step K can begin.\nStep T must be finished before step U can begin.\nStep K must be finished before step B can begin.\nStep C must be finished before step Y can begin.\nStep W must be finished before step N can begin.\nStep E must be finished before step M can begin.\nStep N must be finished before step J can begin.\nStep B must be finished before step S can begin.\nStep O must be finished before step D can begin.\nStep X must be finished before step D can begin.\nStep M must be finished before step Q can begin.\nStep S must be finished before step J can begin.\nStep U must be finished before step Y can begin.\nStep I must be finished before step J can begin.\nStep D must be finished before step J can begin.\nStep Q must be finished before step Y can begin.\nStep J must be finished before step Y can begin.\nStep Z must be finished before step D can begin.\nStep K must be finished before step E can begin.\nStep U must be finished before step J can begin.\nStep I must be finished before step Y can begin.\nStep A must be finished before step B can begin.\nStep B must be finished before step Q can begin.\nStep Z must be finished before step S can begin.\nStep F must be finished before step E can begin.\nStep B must be finished before step I can begin.\nStep C must be finished before step S can begin.\nStep O must be finished before step S can begin.\nStep V must be finished before step O can begin.\nStep C must be finished before step B can begin.\nStep G must be finished before step M can begin.\nStep O must be finished before step Y can begin.\nStep H must be finished before step N can begin.\nStep D must be finished before step Y can begin.\nStep Z must be finished before step O can begin.\nStep K must be finished before step W can begin.\nStep M must be finished before step Y can begin.\nStep O must be finished before step J can begin.\nStep P must be finished before step E can begin.\nStep C must be finished before step Q can begin.\nStep I must be finished before step D can begin.\nStep F must be finished before step I can begin.\nStep W must be finished before step B can begin.\nStep W must be finished before step M can begin.\nStep N must be finished before step D can begin.\nStep Z must be finished before step M can begin.\nStep M must be finished before step U can begin.\nStep R must be finished before step I can begin.\nStep S must be finished before step Y can begin.\nStep L must be finished before step B can begin.\nStep S must be finished before step D can begin.\nStep R must be finished before step G can begin.\nStep U must be finished before step D can begin.\nStep C must be finished before step N can begin.\nStep R must be finished before step T can begin.\nStep K must be finished before step U can begin.\nStep W must be finished before step E can begin.\nStep H must be finished before step E can begin.\nStep X must be finished before step M can begin.\nStep G must be finished before step I can begin.\nStep C must be finished before step U can begin.\nStep N must be finished before step B can begin.\nStep X must be finished before step S can begin.\nStep G must be finished before step H can begin.\nStep T must be finished before step X can begin.\nStep P must be finished before step N can begin.\nStep B must be finished before step Y can begin.\nStep S must be finished before step Q can begin.\nStep C must be finished before step E can begin.\nStep F must be finished before step D can begin.\nStep H must be finished before step J can begin.\nStep B must be finished before step U can begin.\nStep B must be finished before step J can begin.\nStep P must be finished before step I can begin.\nStep N must be finished before step X can begin.\nStep M must be finished before step J can begin.\nStep X must be finished before step I can begin.\nStep L must be finished before step P can begin.\nStep T must be finished before step B can begin.\nStep T must be finished before step K can begin.\nStep D must be finished before step Q can begin.\nStep W must be finished before step X can begin.\nStep A must be finished before step Y can begin.\nStep G must be finished before step D can begin.\nStep R must be finished before step Z can begin.\nStep U must be finished before step Q can begin.\nStep G must be finished before step O can begin.\nStep G must be finished before step Q can begin.\nStep G must be finished before step Y can begin.\nStep P must be finished before step Y can begin.\nStep I must be finished before step Q can begin.\nStep F must be finished before step C can begin.\nStep L must be finished before step K can begin."},function(t,e,n){"use strict";n.r(e);e.default="9 11 6 3 5 3 3 7 1 6 0 10 6 9 5 6 2 7 1 3 9 4 2 1 2 1 3 2 1 8 0 11 4 2 8 1 5 5 1 2 6 1 7 1 1 3 1 1 1 2 1 1 6 0 8 9 4 2 1 8 5 9 3 3 1 1 3 2 1 3 3 2 5 1 5 1 3 5 1 6 0 9 1 5 6 9 6 3 6 2 5 1 2 2 1 1 3 1 9 0 8 1 9 6 9 6 5 6 3 1 2 1 2 1 2 1 1 3 1 5 0 10 3 3 6 3 5 1 7 6 7 9 1 1 2 1 3 3 2 3 2 3 3 6 1 5 0 10 7 3 7 1 4 1 1 9 3 6 1 1 1 1 1 1 9 0 10 9 2 6 7 9 6 5 3 1 1 1 3 3 1 1 1 2 2 3 1 5 0 11 1 5 9 9 5 1 4 3 3 8 5 3 3 1 2 2 4 1 4 2 1 1 3 6 1 9 0 10 9 8 9 1 6 2 5 3 7 5 3 1 3 3 1 1 2 2 3 1 9 0 6 1 9 2 2 1 6 3 2 2 1 1 2 3 3 3 1 8 0 11 6 8 9 1 1 2 7 8 7 9 2 3 2 1 3 2 1 2 1 2 3 4 2 2 1 3 5 1 9 0 7 5 1 1 4 8 1 9 1 2 2 3 2 3 1 1 1 1 6 0 9 6 8 4 7 5 7 6 8 1 2 3 2 1 3 1 1 5 0 7 5 1 9 5 8 1 4 1 2 3 3 1 4 5 5 3 1 6 4 4 5 5 3 7 1 6 0 11 7 1 2 7 2 9 4 1 6 4 5 2 1 3 3 1 1 1 9 0 9 7 2 9 8 2 3 1 4 9 1 1 3 1 3 1 2 3 1 1 8 0 7 1 3 8 2 4 6 3 1 3 1 3 2 3 3 1 4 1 3 2 2 3 4 3 4 1 6 0 11 9 6 9 4 1 1 4 5 9 4 6 1 1 1 2 1 1 1 6 0 9 1 7 3 1 7 7 1 5 9 2 3 2 1 3 2 1 9 0 9 2 5 7 5 1 3 9 4 5 1 3 1 2 3 1 1 3 3 4 3 3 2 3 4 1 8 0 7 1 5 5 1 1 7 4 3 3 2 1 3 2 2 2 1 9 0 11 7 7 9 9 1 2 9 7 6 2 1 1 1 3 3 3 2 2 1 2 1 8 0 10 8 5 1 7 5 5 5 9 9 4 2 1 1 1 2 1 1 3 5 2 5 2 3 7 1 8 0 7 7 5 4 6 1 9 1 2 1 2 3 1 1 1 1 1 7 0 9 9 5 4 2 6 2 7 7 1 3 3 1 3 1 1 1 1 7 0 9 3 1 4 4 5 6 7 6 8 1 1 1 1 3 2 1 2 4 4 1 2 2 2 3 7 1 6 0 6 4 6 6 1 8 4 2 2 2 2 1 3 1 9 0 11 9 9 5 5 9 1 1 4 4 8 2 2 3 1 2 1 1 1 2 3 1 9 0 10 1 5 6 7 2 3 1 8 3 8 2 3 1 2 1 2 2 3 1 3 5 3 3 1 2 4 5 7 4 2 1 5 3 3 6 1 6 0 8 9 5 2 2 4 1 3 7 2 3 1 2 2 2 1 9 0 6 6 1 1 7 4 7 3 1 1 1 1 3 3 2 1 1 5 0 10 7 4 9 9 3 3 7 1 3 6 1 3 1 1 2 3 3 2 1 5 4 3 7 1 8 0 11 6 3 9 1 8 2 1 9 5 5 7 1 1 1 1 1 3 1 1 1 8 0 8 9 1 4 8 1 5 4 8 1 3 3 2 1 2 3 2 1 7 0 9 1 9 7 6 2 1 1 1 3 3 3 2 1 3 1 2 2 5 4 3 5 2 2 3 4 1 5 0 8 4 1 1 9 9 1 2 7 2 3 1 3 2 1 7 0 6 1 4 9 4 3 4 1 3 1 1 1 3 3 1 7 0 11 8 7 4 7 4 3 1 1 9 1 2 1 2 1 1 3 3 3 5 4 3 1 3 7 1 9 0 10 6 5 4 6 1 2 1 1 5 7 2 1 3 2 1 1 1 1 1 1 8 0 6 7 1 4 5 6 2 1 1 3 2 2 3 2 3 1 6 0 7 4 5 1 7 1 1 8 1 3 1 2 3 2 2 3 1 2 5 3 2 3 5 1 8 0 11 9 9 1 6 5 1 9 6 4 1 7 1 3 2 2 1 1 1 2 1 9 0 6 1 6 1 6 6 5 1 2 1 3 3 1 1 3 1 1 6 0 11 7 5 1 5 4 2 5 3 6 1 4 3 1 1 3 1 2 5 4 2 2 3 6 1 5 4 3 3 6 1 6 0 8 4 9 3 5 4 3 1 6 3 1 2 1 2 3 1 9 0 9 4 2 2 1 5 6 1 4 4 1 1 2 1 2 3 1 1 2 1 7 0 9 3 4 1 9 4 8 8 9 3 2 3 3 3 3 1 1 1 2 1 3 4 3 3 5 1 9 0 6 3 1 1 6 2 3 1 1 1 3 2 3 1 1 1 1 7 0 6 7 8 9 2 1 1 1 3 3 1 3 2 2 1 8 0 7 8 4 1 8 5 7 9 1 1 1 1 3 3 2 2 3 2 5 2 3 3 5 1 6 0 6 1 6 6 9 1 9 3 3 1 2 1 2 1 9 0 6 1 5 7 6 2 1 3 1 3 2 1 2 1 1 1 1 7 0 9 9 6 2 3 4 9 1 7 2 1 3 3 1 1 2 2 3 1 1 4 2 3 7 1 5 0 9 7 6 8 8 6 9 1 3 7 2 1 3 1 1 1 6 0 7 4 6 1 3 6 3 9 3 1 3 3 1 2 1 7 0 10 1 4 1 4 1 8 5 2 1 3 3 3 2 1 3 1 3 2 3 2 5 2 2 3 6 1 2 5 3 3 4 1 9 0 9 7 5 9 2 7 6 7 1 3 2 2 1 2 1 3 2 3 2 1 8 0 9 1 5 2 7 1 3 6 4 2 3 2 1 2 1 1 1 1 1 5 0 6 2 1 5 6 1 1 1 3 2 1 3 2 3 1 4 3 7 1 6 0 11 3 2 1 4 4 2 1 4 1 1 3 3 1 3 1 3 1 1 5 0 11 3 5 1 8 3 6 7 9 5 1 9 2 2 1 1 1 1 6 0 6 2 5 4 4 1 3 3 1 1 3 3 1 2 1 3 4 3 1 5 3 7 1 8 0 6 8 5 1 7 1 6 1 1 3 3 1 1 3 2 1 9 0 7 5 1 8 8 1 2 6 2 1 1 1 1 1 3 3 1 1 6 0 11 1 1 9 5 7 9 4 7 3 1 7 1 2 1 2 3 1 5 3 3 2 3 4 3 3 6 1 9 0 6 4 6 9 8 6 1 2 1 1 2 2 3 3 3 1 1 6 0 6 7 1 4 8 1 3 2 2 1 1 1 1 1 7 0 7 2 4 1 7 3 2 3 3 3 1 2 3 1 2 4 2 5 2 1 3 3 4 1 9 0 7 5 6 1 1 5 8 1 3 1 2 1 1 1 1 2 1 1 9 0 6 6 1 6 4 4 3 3 3 1 1 2 1 3 3 2 1 7 0 8 3 7 1 7 7 3 7 4 2 1 1 3 1 3 2 2 5 4 1 3 4 6 5 4 3 5 1 5 0 8 8 1 1 4 2 3 9 5 2 2 2 1 2 1 9 0 8 9 6 5 5 8 2 1 8 3 1 1 2 2 1 1 3 3 1 7 0 11 3 9 9 8 5 6 1 1 7 8 1 2 3 1 2 3 3 1 2 5 5 3 2 3 7 1 7 0 10 9 9 4 8 2 7 2 3 1 9 1 3 1 1 3 1 2 1 7 0 6 1 3 1 4 4 2 2 3 1 3 3 1 3 1 9 0 8 4 9 1 1 8 1 9 1 1 1 2 3 1 3 1 1 1 2 2 3 3 5 2 1 3 7 1 6 0 9 1 5 9 3 5 4 3 7 8 3 3 2 3 2 1 1 6 0 6 1 1 7 1 7 8 3 3 1 2 2 1 1 6 0 7 2 1 8 8 6 7 4 3 1 1 3 2 2 5 3 4 1 1 5 3 3 4 1 7 0 6 5 6 8 2 1 6 1 3 1 1 3 2 2 1 5 0 11 9 1 5 4 3 5 3 4 1 9 7 1 3 3 3 1 1 7 0 11 3 6 5 3 7 4 1 8 1 7 1 2 1 3 3 1 3 1 3 2 1 1 3 7 1 7 0 7 1 8 8 5 3 9 7 3 1 1 3 1 3 2 1 6 0 8 2 7 1 9 8 9 1 9 2 3 1 1 1 3 1 9 0 9 1 5 1 4 6 2 5 3 2 1 1 1 1 2 1 1 3 1 4 3 3 1 4 3 5 2 1 6 2 3 5 1 6 2 5 4 3 6 1 7 0 8 1 7 7 6 1 4 8 1 1 1 3 3 3 1 1 1 6 0 7 5 9 8 1 6 4 2 1 1 3 2 3 3 1 7 0 10 1 1 4 2 8 2 6 7 8 5 3 3 2 1 3 1 3 1 2 3 3 3 5 3 6 1 9 0 9 9 5 7 5 9 2 5 4 1 2 1 3 2 3 1 2 3 3 1 8 0 9 1 5 9 6 5 7 9 1 1 3 1 2 1 2 1 1 1 1 9 0 7 2 9 3 1 1 1 4 3 3 1 2 1 1 1 1 1 2 1 5 5 3 5 3 6 1 7 0 11 3 8 5 2 1 2 8 8 5 9 3 3 2 3 1 1 3 3 1 5 0 11 3 4 1 3 2 1 3 6 5 1 3 3 1 3 3 2 1 9 0 7 9 4 8 7 6 1 6 1 1 2 1 3 1 1 1 2 3 2 5 2 3 3 3 5 1 8 0 6 3 8 1 7 7 2 2 3 2 2 3 1 3 2 1 9 0 10 9 4 9 6 1 9 9 8 7 3 3 2 1 1 1 3 1 3 2 1 9 0 10 7 8 4 6 5 1 1 7 9 6 1 3 2 1 2 2 1 2 3 1 1 1 4 2 3 6 1 6 0 8 2 6 3 7 1 1 8 1 2 3 3 2 1 1 1 5 0 8 1 1 7 4 3 1 3 4 2 3 3 3 1 1 7 0 8 3 7 2 8 2 7 8 1 3 1 3 2 3 2 2 3 3 1 1 3 1 3 1 1 3 5 3 3 7 1 7 0 10 1 9 9 1 7 9 5 8 6 3 1 2 2 1 1 3 3 1 9 0 8 6 5 2 1 9 3 6 6 1 2 3 2 1 3 2 1 2 1 9 0 7 1 9 8 4 8 9 3 1 2 3 2 1 2 1 2 2 4 4 3 3 5 1 3 3 6 1 8 0 7 1 8 8 1 7 5 2 3 2 1 1 3 3 1 1 1 5 0 10 1 4 5 9 5 3 3 7 3 2 1 3 3 2 1 1 9 0 9 5 4 1 4 9 3 4 4 9 2 3 1 3 2 1 1 2 3 1 4 1 1 2 3 3 4 1 6 0 10 1 6 6 1 1 2 3 9 6 6 2 2 1 2 1 3 1 7 0 10 4 6 3 5 1 3 1 9 1 1 2 3 1 1 2 1 1 1 6 0 6 3 1 5 7 1 1 2 1 2 1 1 2 5 1 5 4 3 5 1 6 0 10 1 1 8 2 9 4 2 1 5 7 1 2 1 1 1 3 1 7 0 8 2 9 5 7 5 1 4 3 1 2 2 3 1 3 1 1 6 0 8 3 9 2 9 1 6 3 4 3 2 1 1 3 1 1 2 1 4 1 3 7 1 6 0 11 2 6 1 7 3 3 3 7 7 8 4 2 1 1 3 3 3 1 5 0 6 4 5 4 1 4 9 1 2 3 3 1 1 5 0 7 8 4 4 3 1 1 8 3 1 3 3 2 3 3 1 3 2 5 5 2 1 4 5 5 3 7 1 5 0 10 9 7 1 5 7 1 6 3 2 4 3 1 3 2 1 1 8 0 7 4 9 7 1 5 8 8 3 1 1 1 1 1 2 1 1 8 0 6 9 8 6 2 4 1 1 2 3 3 1 1 1 3 2 5 3 5 2 5 1 3 4 1 8 0 8 7 1 3 2 1 5 1 3 2 2 3 1 3 1 3 3 1 7 0 10 1 4 2 7 5 2 7 5 6 4 3 1 2 1 1 2 2 1 8 0 8 9 1 3 3 1 9 1 3 1 3 2 3 1 1 2 1 1 3 3 1 3 4 1 6 0 8 2 4 4 9 4 1 6 8 1 3 3 1 2 3 1 5 0 9 6 9 8 1 1 3 2 6 5 2 3 3 2 1 1 7 0 7 5 1 5 4 8 6 4 1 1 1 2 2 3 3 1 5 5 1 3 7 1 8 0 6 1 2 3 1 9 8 1 3 3 1 2 2 1 3 1 7 0 10 8 9 4 8 4 1 1 5 1 4 2 1 2 1 3 2 2 1 8 0 10 2 4 2 3 8 3 3 7 1 8 3 2 1 1 3 2 1 2 4 5 1 2 5 2 3 3 5 1 5 0 6 5 1 4 7 2 4 1 3 1 1 2 1 9 0 10 4 4 9 5 8 6 1 9 2 8 3 3 3 2 3 2 1 1 2 1 9 0 11 5 7 3 7 1 4 2 2 2 3 9 1 2 3 2 1 1 2 1 1 2 4 2 2 4 2 1 5 1 7 4 5 3 5 1 8 0 11 7 9 2 3 6 8 1 3 8 3 6 1 1 1 2 1 2 1 3 1 7 0 10 8 9 1 9 1 7 7 8 7 3 3 2 1 1 1 1 3 1 8 0 11 3 7 5 5 4 1 4 5 6 7 8 1 3 3 1 2 2 2 3 2 1 2 1 3 3 4 1 8 0 9 9 4 5 1 2 2 3 2 6 3 2 2 1 1 2 1 3 1 7 0 6 1 1 7 2 8 4 3 1 3 2 1 2 3 1 8 0 9 1 7 3 2 2 3 1 1 6 2 1 3 1 2 1 1 2 4 1 1 3 3 4 1 7 0 6 1 8 1 1 5 6 3 2 2 2 3 1 1 1 6 0 8 6 1 5 9 5 4 3 6 2 2 3 3 2 1 1 6 0 6 5 1 1 1 1 9 2 3 3 3 1 3 2 5 3 1 3 5 1 7 0 11 2 1 1 2 8 2 3 7 5 5 3 2 2 2 2 2 2 1 1 5 0 10 8 9 2 6 9 1 8 3 9 9 2 3 1 3 1 1 8 0 10 3 9 3 9 6 1 2 5 4 1 2 2 1 2 1 3 1 3 4 3 5 2 4 4 6 5 2 6 5 4 3 5 1 5 0 7 5 1 7 9 2 8 7 1 1 2 3 2 1 6 0 6 1 4 6 3 1 7 1 1 1 3 1 1 1 7 0 6 3 8 7 2 9 1 3 1 3 1 1 3 3 3 3 5 2 5 3 6 1 8 0 7 9 1 8 1 9 8 8 1 3 2 3 3 1 1 2 1 9 0 7 3 1 7 6 5 2 1 1 3 1 3 1 3 3 1 3 1 7 0 7 3 4 1 6 9 3 3 3 3 3 3 1 2 2 3 2 4 4 5 3 3 7 1 9 0 7 1 6 3 5 2 1 6 1 2 1 1 3 1 3 3 3 1 6 0 8 2 9 1 5 5 2 1 4 2 2 1 2 2 3 1 6 0 8 1 1 3 4 4 4 1 3 1 1 2 1 2 3 2 4 1 2 5 3 3 3 5 1 9 0 8 4 1 7 6 3 1 1 3 1 1 3 1 1 1 1 1 1 1 9 0 9 3 8 2 1 7 4 1 6 3 1 3 2 1 2 2 1 1 3 1 8 0 8 5 2 2 3 9 2 6 1 1 2 1 2 2 2 1 3 5 2 4 4 1 3 5 1 9 0 7 4 6 1 3 9 4 6 1 2 3 1 2 1 1 2 3 1 6 0 7 7 2 2 1 5 1 7 2 1 2 3 3 1 1 5 0 8 1 5 8 1 5 4 4 7 2 1 1 2 1 1 2 1 2 3 4 2 7 7 5 4 3 5 1 6 0 7 3 8 1 8 9 9 4 3 1 1 1 1 3 1 8 0 10 4 1 1 2 8 8 8 5 7 9 1 2 3 2 1 1 2 3 1 7 0 11 8 4 8 2 2 4 3 8 5 5 1 3 1 3 1 1 3 1 4 3 5 5 2 3 6 1 7 0 7 6 1 2 7 7 4 2 3 2 1 1 3 3 1 1 5 0 6 8 1 1 7 1 6 1 3 2 1 1 1 8 0 7 2 1 8 5 7 7 6 3 3 2 2 1 1 2 2 2 4 4 1 3 1 3 4 1 6 0 11 8 3 8 7 1 3 2 4 4 2 1 3 3 1 3 2 3 1 7 0 11 5 6 2 4 2 4 8 3 2 1 2 1 1 1 2 3 3 2 1 9 0 7 3 3 7 1 5 2 1 1 3 2 2 2 3 1 1 3 5 2 5 1 3 5 1 5 0 11 4 2 8 5 8 2 8 7 1 1 1 3 2 1 3 2 1 6 0 11 4 7 2 6 1 8 2 1 3 9 1 3 1 3 1 3 1 1 6 0 8 3 1 8 3 1 7 5 5 2 1 1 2 1 1 1 1 1 5 2 3 7 1 8 0 7 8 1 2 1 1 5 5 3 1 1 3 3 1 1 3 1 6 0 9 6 9 6 1 2 1 1 4 5 1 1 3 1 1 1 1 6 0 10 7 1 4 1 5 9 7 4 2 1 1 1 2 2 3 1 5 2 5 1 2 2 1 2 1 2 5 5 2 6 3 5 3 3 6 1 6 0 6 9 7 3 7 1 3 1 3 2 1 1 3 1 9 0 11 3 4 1 4 4 5 5 7 8 5 4 1 1 3 1 2 2 2 2 2 1 6 0 6 1 7 1 2 7 8 1 2 2 3 1 1 5 4 2 4 3 4 3 6 1 7 0 10 8 3 1 2 9 6 2 4 2 5 1 3 1 1 3 2 3 1 7 0 10 9 6 3 8 9 2 1 8 8 2 2 2 3 1 1 2 1 1 7 0 8 1 7 2 8 4 9 1 6 2 1 2 1 2 1 1 3 3 2 2 1 4 3 6 1 7 0 9 5 4 7 6 2 5 7 8 1 3 2 1 1 2 1 1 1 5 0 9 8 6 9 3 6 6 4 1 1 1 1 1 2 3 1 8 0 7 6 7 4 1 8 8 1 3 1 2 2 1 1 1 3 4 3 3 5 3 3 3 5 1 6 0 8 8 1 8 7 7 8 3 8 1 2 3 1 3 2 1 6 0 11 5 7 8 4 3 1 5 7 1 9 7 3 3 1 3 2 1 1 5 0 7 3 1 4 4 1 1 5 2 2 3 1 1 2 2 3 1 1 3 5 1 5 0 6 4 7 7 3 1 3 3 1 1 1 3 1 7 0 7 7 9 3 5 1 3 1 3 3 3 2 1 3 3 1 9 0 10 2 1 6 1 1 6 9 3 4 8 3 2 3 1 3 1 2 3 1 4 1 1 3 5 2 6 6 4 5 3 5 1 5 0 9 2 1 6 7 3 3 7 3 7 2 2 1 1 2 1 5 0 6 4 1 9 2 1 7 1 2 1 2 3 1 6 0 11 2 1 5 2 1 3 6 9 7 2 3 2 1 3 1 1 1 3 2 4 4 3 3 6 1 6 0 8 6 1 2 9 1 7 6 1 3 2 3 1 3 1 1 9 0 11 6 8 1 9 4 6 6 9 5 1 8 3 2 1 3 2 1 1 2 3 1 9 0 9 8 4 9 4 3 3 1 6 2 2 2 2 1 2 1 2 3 1 5 5 5 5 1 4 3 7 1 9 0 8 1 4 3 3 7 3 8 5 3 2 1 1 1 1 3 1 1 1 7 0 8 5 6 2 1 5 5 3 9 1 2 1 1 1 3 2 1 7 0 7 3 1 1 7 6 9 1 2 1 1 1 3 2 3 3 3 4 5 3 3 4 3 4 1 7 0 6 8 5 1 1 6 7 1 1 3 1 1 2 3 1 6 0 11 3 6 9 1 1 8 2 2 1 7 2 1 1 1 1 3 3 1 9 0 7 8 5 1 1 1 7 3 1 1 2 1 1 1 1 2 3 4 1 4 3 1 2 5 3 2 4 4 3 7 1 7 0 8 1 5 9 4 9 1 2 1 1 2 1 1 3 1 1 1 5 0 8 5 4 6 2 6 5 1 1 1 1 1 2 1 1 6 0 6 1 8 1 1 8 2 1 1 2 2 1 1 3 3 4 5 2 2 3 3 6 1 5 0 7 6 9 8 8 1 8 2 3 3 1 3 1 1 8 0 11 6 6 2 7 1 3 8 6 5 5 9 1 2 3 2 1 3 2 3 1 8 0 7 9 1 7 2 1 2 5 2 2 1 3 3 2 3 1 3 4 5 3 3 4 3 6 1 6 0 9 1 3 3 8 3 8 2 9 5 2 3 1 1 1 2 1 7 0 8 2 6 1 5 6 3 9 7 3 3 1 2 1 1 3 1 7 0 10 9 1 2 2 8 1 8 7 5 5 2 3 1 1 2 3 1 4 3 1 3 2 2 3 4 1 8 0 10 4 4 1 6 1 8 4 9 9 9 1 1 1 3 1 3 2 2 1 6 0 6 4 3 1 6 5 1 3 3 1 2 2 3 1 9 0 6 1 7 6 4 8 8 1 2 2 1 2 1 3 1 3 4 3 3 3 4 3 4 6 5 5 3 4 1 5 0 10 3 5 1 5 7 1 1 9 1 7 2 3 3 1 3 1 9 0 10 4 7 8 1 7 5 8 4 7 9 3 2 2 1 1 2 3 1 1 1 5 0 11 1 1 7 4 3 4 5 8 1 4 6 2 1 1 3 3 4 5 2 2 3 6 1 6 0 8 1 2 9 5 4 4 3 3 2 3 1 3 3 2 1 5 0 9 1 3 5 1 5 4 7 7 4 1 1 1 2 3 1 8 0 6 6 4 3 4 1 7 1 1 1 3 3 2 1 3 5 3 4 5 2 2 3 6 1 9 0 11 1 6 1 1 3 6 5 1 9 9 7 1 1 3 1 1 3 3 1 3 1 5 0 10 8 6 6 5 5 2 6 1 1 2 1 1 2 1 2 1 5 0 8 2 5 1 3 1 7 9 5 2 3 3 1 1 5 4 1 5 4 2 3 5 1 5 0 9 5 7 6 1 6 9 2 3 9 1 2 1 1 2 1 7 0 6 7 3 1 4 1 2 1 1 1 3 2 1 3 1 6 0 9 4 3 1 8 2 1 5 3 6 3 1 3 1 1 3 3 4 1 3 5 3 7 1 7 0 9 1 5 3 3 1 6 7 3 8 1 2 1 3 3 2 1 1 6 0 8 2 1 4 1 9 2 1 5 1 1 2 3 3 1 1 7 0 11 7 1 5 8 5 9 1 6 1 1 5 1 1 1 3 2 1 1 2 4 3 4 1 2 3 6 7 2 6 3 5 3 3 6 1 9 0 9 2 1 4 1 1 9 8 7 7 2 2 1 3 3 2 3 1 2 1 9 0 6 5 6 1 7 8 9 2 1 2 2 1 1 3 2 3 1 7 0 7 3 4 4 5 7 1 3 2 3 1 2 1 3 3 5 2 4 4 3 4 3 7 1 5 0 7 1 6 7 9 9 4 1 2 2 3 1 1 1 5 0 7 6 1 5 3 8 1 5 1 1 3 1 1 1 8 0 9 4 1 7 4 7 5 8 8 8 2 2 3 3 1 1 1 3 1 2 1 3 1 2 3 3 5 1 7 0 7 6 8 3 2 9 6 1 2 2 2 1 2 3 1 1 9 0 8 3 7 3 1 5 6 7 4 2 3 2 1 2 2 3 1 2 1 6 0 6 7 7 1 8 9 5 1 1 2 2 3 2 3 3 2 2 3 3 4 1 6 0 7 9 1 5 7 8 4 5 1 1 2 1 3 1 1 7 0 9 6 5 4 9 2 5 1 6 9 2 1 1 3 1 2 3 1 9 0 8 5 6 3 2 1 2 9 7 1 1 3 3 3 2 2 2 2 4 1 1 4 3 6 1 5 0 6 6 1 8 5 2 8 3 3 1 1 3 1 8 0 9 9 2 1 4 1 7 9 2 2 2 2 1 1 2 1 1 1 1 9 0 6 1 6 2 1 5 2 2 2 2 2 1 3 1 2 1 5 1 4 4 3 3 1 1 6 5 3 3 7 1 5 0 9 3 8 1 9 3 7 1 8 9 1 2 1 2 2 1 9 0 8 3 1 2 1 4 9 6 1 3 3 2 3 1 2 1 1 3 1 8 0 10 1 9 5 7 1 4 1 1 9 4 2 1 1 1 2 2 1 1 2 5 4 1 2 1 5 3 6 1 5 0 11 9 1 6 1 7 1 1 3 1 8 5 3 1 1 1 3 1 7 0 6 3 5 9 4 8 1 1 3 1 2 2 3 1 1 7 0 10 1 3 8 7 1 5 2 1 2 8 3 1 1 1 1 1 1 3 2 3 5 1 3 3 6 1 7 0 11 9 5 1 1 6 2 1 1 6 1 9 1 1 1 2 1 1 1 1 9 0 7 4 2 3 1 4 8 8 2 2 1 3 1 1 3 3 1 1 7 0 11 9 4 5 1 5 9 6 1 7 7 4 2 3 2 1 1 1 2 3 4 2 1 5 5 3 5 1 5 0 11 4 3 7 6 7 5 1 6 8 7 4 3 2 3 1 3 1 7 0 11 1 4 7 6 9 9 7 5 6 1 8 1 1 3 1 1 1 3 1 8 0 9 2 8 2 8 3 2 5 1 4 1 1 2 3 2 2 1 3 3 5 1 2 5 3 4 1 9 0 9 6 5 3 6 3 1 1 8 7 1 3 3 3 1 1 2 1 2 1 5 0 11 1 4 6 2 5 2 3 7 5 9 6 1 2 1 1 2 1 6 0 11 5 9 3 5 9 8 7 2 1 6 1 3 1 1 1 3 3 4 5 2 2 3 5 2 8 2 5 6 2 5 4 3 4 1 8 0 6 9 6 1 2 1 3 3 1 3 3 2 3 1 1 1 9 0 10 6 4 1 7 3 8 5 8 1 9 3 2 3 1 2 1 3 3 3 1 8 0 9 6 6 3 5 1 9 1 4 4 3 3 2 2 1 1 1 2 2 4 5 3 3 6 1 8 0 6 7 1 4 4 2 8 1 3 1 1 2 1 2 3 1 8 0 8 1 7 5 3 7 3 6 2 1 3 2 3 1 3 3 2 1 7 0 10 8 7 1 1 3 1 7 6 9 4 1 2 1 3 2 3 3 4 3 5 1 4 2 3 6 1 6 0 7 1 2 1 6 2 5 8 3 2 1 1 2 3 1 6 0 11 6 7 9 2 7 1 5 3 9 9 7 1 2 1 2 3 1 1 7 0 11 3 1 8 4 8 9 7 7 5 9 9 1 1 2 1 2 3 1 3 2 1 3 1 3 3 4 1 9 0 10 4 8 5 1 9 1 1 7 5 4 3 2 2 3 3 1 1 2 2 1 9 0 6 7 7 8 1 8 7 1 2 1 2 2 2 1 1 2 1 7 0 10 2 8 9 6 7 1 5 5 4 6 1 1 1 2 1 1 1 5 3 3 2 3 4 1 5 0 7 9 1 1 6 1 3 1 1 1 2 1 1 1 5 0 6 1 2 4 3 4 4 1 1 3 3 1 1 9 0 11 9 6 6 5 7 8 1 4 1 2 8 3 2 1 3 1 2 1 3 1 1 2 1 2 1 3 2 1 4 3 3 6 1 6 0 10 1 5 7 1 1 2 6 3 1 5 2 2 1 3 2 1 1 9 0 6 1 9 6 4 6 2 1 3 3 3 1 1 2 3 1 1 5 0 9 6 6 1 2 1 6 5 1 8 1 1 3 1 1 5 2 3 3 5 2 3 5 1 9 0 11 2 1 5 5 2 5 4 3 2 1 3 3 2 2 1 3 2 1 1 2 1 7 0 9 9 6 1 8 8 9 1 4 8 1 1 1 2 1 3 2 1 7 0 6 7 1 2 3 4 7 1 3 1 1 1 1 3 2 1 2 3 5 3 5 1 6 0 9 7 1 1 5 8 1 9 4 8 2 1 3 2 1 2 1 9 0 9 1 5 6 1 6 6 9 4 4 2 1 2 1 3 1 3 1 3 1 6 0 11 6 1 5 7 9 1 3 7 6 5 1 3 3 1 3 3 3 1 1 2 5 2 3 4 1 7 0 7 7 8 6 8 1 4 1 1 1 2 2 1 2 1 1 5 0 6 3 1 9 3 9 9 3 2 3 1 1 1 5 0 11 3 9 5 1 8 4 9 9 1 4 7 3 2 3 3 1 1 1 3 4 5 1 1 5 4 3 6 1 5 0 11 2 2 3 8 8 6 6 8 1 1 4 3 1 2 2 3 1 5 0 9 6 5 2 4 5 1 3 6 6 1 1 3 3 1 1 6 0 11 4 9 7 7 2 6 1 9 6 1 7 2 1 2 2 1 2 2 2 1 4 3 4 3 4 1 7 0 6 9 4 9 2 1 7 1 1 1 3 1 3 2 1 8 0 9 4 1 9 8 6 5 2 8 1 2 3 2 3 1 3 3 1 1 7 0 7 5 1 3 4 1 4 6 2 3 1 3 3 1 1 1 5 3 1 3 4 1 7 0 7 6 1 1 6 5 1 3 1 1 1 2 2 3 2 1 5 0 6 4 1 1 8 6 3 1 3 3 3 3 1 6 0 7 5 1 5 8 4 6 5 3 3 3 1 2 3 1 4 2 2 3 4 1 6 0 10 5 2 8 6 2 1 9 1 8 8 2 3 1 2 2 1 1 5 0 6 1 8 9 3 1 6 2 1 2 1 1 1 8 0 10 7 7 7 7 8 5 1 9 1 4 1 1 3 1 2 2 1 1 5 2 3 5 3 6 1 6 0 6 1 4 6 8 8 6 3 3 3 3 3 1 1 9 0 9 7 2 6 9 1 6 2 7 7 3 2 3 3 3 3 1 3 3 1 7 0 9 5 2 1 1 5 1 3 1 7 1 1 3 3 3 3 3 2 5 2 1 5 1 1 7 1 3 5 3 3 4 1 5 0 6 1 6 4 7 2 1 2 1 1 3 1 1 7 0 10 9 4 4 9 1 3 3 8 1 7 1 3 3 1 1 3 2 1 9 0 6 7 9 5 8 1 4 1 3 1 2 3 3 1 3 1 2 3 2 1 3 5 1 7 0 8 1 1 2 8 1 9 6 2 2 1 2 1 1 2 1 1 9 0 8 3 6 1 8 4 9 9 7 3 1 3 1 2 2 1 3 2 1 5 0 10 9 2 5 1 1 1 6 3 4 6 1 1 3 3 3 2 1 4 3 3 3 5 1 5 0 6 2 5 5 1 8 6 3 3 1 2 3 1 6 0 7 3 4 8 1 3 3 3 3 2 1 2 2 1 1 7 0 8 1 8 5 1 2 5 2 9 1 2 1 3 1 3 1 3 1 3 2 2 3 7 1 5 0 11 4 2 9 2 2 6 9 1 4 1 6 3 3 1 3 1 1 6 0 6 1 4 5 5 2 9 1 3 1 3 2 1 1 5 0 9 7 6 3 9 1 2 7 1 5 3 2 1 1 2 1 2 1 1 3 3 1 3 4 1 9 0 7 7 5 4 1 1 3 5 2 2 3 1 1 1 3 1 3 1 8 0 9 1 6 9 3 1 7 3 3 5 1 1 1 1 1 1 1 1 1 6 0 10 9 4 6 9 6 7 1 7 6 1 3 1 3 2 2 1 1 3 4 3 1 2 3 4 4 3 5 1 6 0 11 5 6 1 6 9 6 9 4 2 4 4 1 3 1 1 1 3 1 5 0 7 7 4 5 9 6 1 6 2 1 3 3 2 1 5 0 8 5 3 1 5 8 1 5 7 3 1 1 3 1 4 3 5 1 5 3 5 1 5 0 9 8 7 3 6 1 3 9 1 2 1 3 3 2 1 1 9 0 6 5 9 1 2 8 5 1 1 1 1 2 1 1 2 2 1 5 0 8 6 5 3 8 6 1 1 4 2 2 3 3 1 2 1 1 5 4 3 5 1 6 0 9 2 9 1 6 9 7 4 7 1 1 2 3 2 3 2 1 8 0 10 1 2 4 7 7 7 7 1 1 3 2 2 3 1 3 1 3 3 1 5 0 10 3 1 3 8 1 5 7 9 4 1 3 2 3 1 3 3 2 2 3 2 3 5 1 9 0 10 1 2 6 9 4 5 3 1 8 4 1 1 1 1 2 2 1 2 1 1 9 0 9 1 5 8 3 5 6 1 1 6 3 3 1 1 2 1 3 1 1 1 6 0 10 8 5 1 5 9 2 7 9 8 7 3 1 3 3 2 2 4 1 1 1 5 1 3 2 2 4 5 3 6 1 9 0 11 7 6 5 5 1 1 6 6 4 1 3 3 3 2 2 1 2 3 1 3 1 9 0 7 2 6 7 1 9 2 4 2 1 3 3 3 1 2 1 1 1 8 0 8 6 1 4 6 6 1 6 5 3 1 2 1 2 2 3 1 3 1 1 2 2 2 3 7 1 9 0 6 6 7 9 1 8 7 3 2 2 1 2 1 2 3 2 1 8 0 10 8 1 5 7 8 6 5 3 8 5 1 2 3 2 3 1 2 3 1 6 0 11 1 5 6 2 1 3 1 7 9 6 9 3 1 1 1 1 2 4 4 1 2 1 1 5 3 7 1 8 0 7 1 7 1 7 7 8 7 2 1 3 1 1 3 2 1 1 5 0 7 8 3 2 1 9 1 6 2 1 3 1 2 1 6 0 6 2 5 7 9 1 6 2 3 1 1 2 1 4 5 3 5 4 1 5 3 5 1 7 0 10 1 9 5 2 4 1 2 6 6 9 3 1 1 3 1 3 1 1 8 0 11 8 2 5 6 1 1 1 9 2 1 3 2 1 3 3 1 1 2 3 1 9 0 10 7 6 2 8 1 7 5 1 8 5 1 1 3 2 3 1 2 2 1 5 1 3 5 3 6 1 1 3 3 5 1 7 2 5 3 3 6 1 7 0 6 1 3 8 3 6 4 1 1 1 2 3 3 2 1 9 0 10 3 1 3 6 9 3 7 8 5 6 3 3 1 1 1 1 2 1 2 1 9 0 8 5 6 1 1 6 1 6 5 2 1 2 3 2 3 2 3 1 2 2 4 2 4 4 3 6 1 6 0 8 7 6 9 6 5 4 1 7 3 1 1 3 1 2 1 9 0 8 5 3 4 4 1 2 4 1 2 1 1 3 1 1 1 2 2 1 6 0 8 2 7 1 4 1 7 3 5 2 1 2 1 2 3 2 3 5 1 4 4 3 4 1 6 0 10 9 1 3 1 2 2 2 6 9 1 1 3 2 1 3 1 1 9 0 8 9 5 7 1 5 1 9 1 3 2 2 2 2 2 1 3 1 1 9 0 11 1 4 8 4 1 7 1 8 8 8 8 1 1 3 2 1 3 3 2 3 3 3 3 3 3 6 1 5 0 10 5 5 8 9 1 9 9 1 1 8 3 1 1 2 1 1 5 0 8 1 8 1 7 8 9 3 7 2 1 2 2 3 1 7 0 6 1 7 6 4 5 1 1 2 3 2 3 1 2 2 5 3 3 4 4 3 5 1 9 0 10 1 4 4 1 1 6 4 1 3 8 2 2 1 1 1 3 1 2 1 1 5 0 7 3 3 1 1 1 7 7 3 1 2 1 2 1 9 0 11 1 6 6 8 4 6 2 4 7 4 2 1 3 1 2 2 1 1 1 3 3 4 2 3 2 2 3 5 4 3 3 7 1 8 0 9 4 1 3 8 7 6 1 2 7 2 3 1 2 2 2 3 2 1 5 0 11 1 4 8 2 7 7 3 5 3 1 1 3 3 1 2 2 1 7 0 11 1 9 2 1 1 9 7 5 8 6 6 3 1 3 3 2 3 1 1 4 3 3 1 4 4 3 6 1 7 0 8 3 6 1 3 9 2 5 5 1 3 3 2 3 3 2 1 6 0 6 5 4 4 9 3 1 3 1 3 1 3 2 1 7 0 7 5 6 1 9 3 4 3 3 2 3 3 1 1 2 3 2 4 1 5 2 3 6 1 5 0 9 1 9 3 5 1 1 7 8 6 1 3 1 3 1 1 5 0 8 1 1 9 3 3 6 9 1 1 1 2 3 3 1 6 0 9 6 1 3 9 4 8 1 8 1 2 1 2 1 2 1 3 5 2 4 2 3 3 4 1 6 0 9 4 1 6 9 2 1 8 5 8 2 1 1 2 1 1 1 7 0 6 9 5 1 1 1 6 1 2 2 2 3 3 1 1 9 0 10 1 6 3 1 8 7 2 2 3 1 2 2 2 3 1 1 2 2 2 2 2 3 3 4 4 2 5 3 3 4 1 7 0 6 6 7 1 2 7 9 3 1 2 1 3 3 1 1 8 0 6 5 1 4 1 8 5 2 3 2 3 1 2 3 1 1 9 0 8 7 7 3 6 1 8 7 5 1 2 3 2 1 3 1 1 2 2 5 1 1 3 5 1 5 0 11 6 3 1 4 7 6 4 8 8 1 5 3 1 3 1 2 1 8 0 8 7 2 2 9 4 5 7 1 1 3 3 1 1 1 2 2 1 8 0 10 3 7 1 3 2 4 8 6 1 5 2 3 1 1 2 1 1 3 2 4 1 2 5 3 4 1 8 0 8 8 7 5 9 4 5 1 6 3 1 3 2 1 3 3 3 1 7 0 10 5 1 5 9 8 1 6 5 6 1 1 1 1 2 3 1 2 1 5 0 7 4 7 4 9 3 1 1 3 1 3 2 1 3 4 4 1 3 5 1 8 0 7 1 2 5 1 1 2 6 2 3 2 3 2 1 1 3 1 8 0 6 5 6 3 8 5 1 2 1 1 3 3 1 3 3 1 5 0 8 6 1 8 7 9 1 4 5 1 1 1 1 2 1 1 5 3 1 3 5 1 6 0 6 6 1 6 4 3 1 1 3 3 2 3 1 1 8 0 6 1 6 6 1 6 7 2 1 2 3 2 1 2 2 1 6 0 8 3 5 5 4 1 7 3 5 2 2 3 2 1 3 1 2 2 3 5 4 5 4 5 4 3 7 1 7 0 11 4 1 5 4 2 5 1 5 8 2 6 2 1 1 3 1 1 3 1 7 0 6 1 2 1 4 7 8 2 3 1 3 3 3 1 1 9 0 9 2 1 7 4 2 1 3 1 3 3 2 2 2 3 1 2 1 1 2 3 5 4 3 3 4 3 7 1 9 0 10 4 5 1 4 7 6 4 4 5 4 2 2 2 2 1 1 3 3 1 1 7 0 9 9 3 4 1 3 8 6 5 3 2 3 2 1 2 3 1 1 9 0 11 5 5 9 3 7 4 1 9 6 1 7 2 3 3 1 2 1 3 3 1 3 1 3 2 5 3 1 3 6 1 8 0 11 3 2 8 1 3 7 7 7 5 8 6 2 1 2 1 1 2 3 3 1 5 0 9 8 6 6 5 8 7 6 5 1 1 1 1 1 3 1 9 0 9 7 1 8 3 9 4 8 9 4 1 3 3 1 2 3 1 3 2 2 4 1 4 4 4 3 5 1 9 0 9 7 2 1 5 7 5 1 9 9 3 1 3 2 1 2 3 1 1 1 7 0 11 6 4 1 4 4 1 7 1 2 7 7 3 2 1 1 2 3 1 1 7 0 6 7 9 1 9 1 2 2 3 2 1 2 2 1 3 5 4 4 2 3 6 1 6 0 8 8 9 3 3 8 4 1 2 2 1 2 2 1 2 1 5 0 10 7 2 2 9 4 4 1 6 4 8 3 3 2 3 1 1 5 0 6 7 4 3 1 7 3 3 1 3 2 1 2 5 5 1 5 3 6 7 5 1 5 3 3 4 1 6 0 7 1 5 8 3 9 7 8 2 2 3 1 3 1 1 8 0 9 4 3 7 7 3 2 6 2 1 3 1 1 1 1 2 1 2 1 7 0 11 1 1 4 4 3 7 3 1 1 1 1 2 1 1 1 2 3 3 1 2 1 3 3 6 1 8 0 6 7 8 1 1 4 4 2 3 1 1 1 2 1 1 1 6 0 11 1 8 9 4 2 8 5 2 9 9 3 3 1 1 2 1 1 1 8 0 8 6 1 2 1 2 7 3 9 1 1 2 1 1 1 2 3 1 5 1 2 4 3 3 7 1 5 0 11 6 3 9 1 6 2 1 9 1 7 3 1 1 2 1 1 1 8 0 9 2 1 7 1 5 1 7 3 6 2 1 1 2 2 2 1 1 1 6 0 6 4 1 8 8 8 5 2 1 3 2 3 1 1 3 2 2 4 2 3 3 5 1 8 0 10 1 9 4 4 7 1 5 3 6 4 1 1 1 2 1 3 1 3 1 9 0 9 7 4 4 1 2 4 2 7 9 2 1 3 1 2 3 3 3 2 1 8 0 7 2 6 2 3 2 8 1 2 2 2 3 1 1 2 3 4 2 4 3 5 3 4 1 7 0 7 6 2 1 5 6 3 8 2 3 3 2 1 2 1 1 9 0 6 2 1 4 6 4 7 2 3 1 1 3 2 3 1 2 1 6 0 10 9 1 2 3 5 7 1 1 3 7 3 3 1 1 2 2 3 3 3 1 2 3 6 5 5 3 7 1 8 0 7 8 7 6 2 4 1 3 3 1 1 2 1 2 3 3 1 7 0 11 6 8 2 5 1 9 3 6 2 4 1 1 1 3 2 1 2 1 1 6 0 8 7 6 6 1 6 1 7 2 1 3 2 2 1 3 2 2 1 3 4 4 2 3 7 1 6 0 11 7 1 9 3 6 2 3 3 7 2 6 3 1 1 1 1 3 1 9 0 11 9 2 3 4 5 5 1 1 8 9 5 1 2 1 1 3 1 2 1 3 1 9 0 9 2 1 4 5 4 8 1 7 9 3 2 3 1 2 3 2 1 1 1 1 5 3 3 3 3 3 5 1 8 0 8 9 5 7 8 3 3 1 1 2 2 1 2 2 2 1 1 1 8 0 9 1 1 2 7 1 2 1 4 6 3 3 2 1 1 1 1 1 1 6 0 9 2 5 7 8 1 4 6 7 7 3 3 1 3 3 2 1 3 3 4 3 3 7 1 9 0 7 9 2 1 4 4 3 6 2 1 2 1 1 1 2 2 1 1 5 0 9 1 5 5 1 4 5 7 7 1 1 1 1 1 3 1 5 0 6 6 8 7 1 9 5 1 2 2 1 1 5 4 5 3 1 1 2 3 7 1 8 0 9 1 2 5 2 6 8 1 8 2 1 1 2 1 1 1 3 1 1 7 0 9 1 1 5 6 7 1 1 5 1 1 1 3 2 1 3 1 1 5 0 10 7 5 3 5 5 4 8 7 8 1 2 1 1 1 3 1 1 2 3 2 3 5 5 5 6 2 4 5 3 3 4 1 9 0 11 8 9 6 4 1 8 1 1 3 2 7 2 2 1 1 2 3 1 2 1 1 7 0 8 3 8 1 8 8 4 2 3 1 2 1 1 2 3 1 1 5 0 9 4 1 8 2 3 7 1 2 2 1 1 1 2 2 1 2 3 2 3 7 1 6 0 8 2 9 1 7 3 8 3 2 1 1 2 2 2 3 1 9 0 8 2 2 1 6 2 1 8 1 2 1 1 2 3 3 2 3 1 1 7 0 9 1 2 6 2 5 8 2 1 7 2 3 1 2 2 1 2 3 2 3 3 2 4 3 3 5 1 9 0 11 3 7 9 4 8 8 5 5 4 4 1 1 3 2 1 3 1 2 2 2 1 5 0 10 5 6 5 9 8 5 7 1 4 9 1 1 2 2 2 1 6 0 9 7 8 1 2 5 2 3 8 9 1 3 3 2 3 1 5 1 2 2 2 3 6 1 6 0 7 2 3 2 1 7 1 1 2 3 2 3 1 1 1 9 0 11 7 5 8 3 1 4 2 1 5 7 1 3 1 1 3 1 3 1 1 3 1 8 0 7 8 6 6 5 8 1 3 1 1 2 3 3 3 3 1 2 1 3 4 5 2 3 6 1 6 0 10 4 1 2 6 5 3 9 2 9 5 1 1 1 3 2 3 1 9 0 9 4 1 8 7 4 9 7 1 6 1 2 3 3 3 1 1 2 3 1 5 0 11 5 4 5 4 4 1 1 6 4 1 6 2 1 1 3 3 5 2 5 1 3 3 1 2 6 7 5 6 2 5 4 3 6 1 5 0 10 5 2 4 2 3 4 2 1 4 3 3 1 2 3 2 1 6 0 6 9 9 7 1 8 2 1 1 1 1 2 2 1 9 0 9 8 7 4 6 2 9 1 5 8 2 1 3 2 2 2 2 3 3 1 1 1 2 4 3 3 6 1 6 0 10 3 7 7 2 8 6 8 1 9 3 1 3 2 1 3 2 1 6 0 9 5 9 8 5 1 9 8 5 1 3 2 2 3 1 1 1 8 0 7 4 3 1 5 5 5 6 1 1 2 2 1 3 1 2 3 5 2 2 1 2 3 4 1 8 0 9 8 9 1 8 5 8 3 3 5 1 3 3 1 1 1 2 1 1 6 0 10 8 3 1 7 9 1 6 1 8 2 1 2 3 2 1 3 1 7 0 8 3 8 4 1 2 9 5 9 3 1 1 1 3 1 1 1 1 2 2 3 7 1 5 0 6 9 3 1 6 2 7 3 1 3 2 3 1 9 0 9 2 6 9 6 7 8 1 8 2 2 2 2 1 1 1 2 1 2 1 5 0 6 1 4 8 9 2 1 3 3 3 1 3 4 3 5 1 5 1 3 3 4 1 5 0 6 1 9 9 4 1 9 1 3 3 1 3 1 6 0 8 5 6 6 1 2 7 6 7 2 2 1 3 1 2 1 6 0 11 6 8 3 4 1 8 8 1 8 1 3 3 3 3 1 2 1 5 3 5 3 4 4 1 3 4 5 3 6 1 8 0 10 1 9 9 8 6 3 4 2 1 7 1 3 2 3 3 1 1 2 1 5 0 7 1 1 1 2 4 3 2 2 1 1 1 2 1 5 0 8 9 9 5 4 1 6 7 8 1 1 1 2 1 1 4 4 1 4 5 3 6 1 5 0 6 5 1 8 4 5 6 2 1 1 2 2 1 7 0 10 5 3 5 1 3 6 8 1 9 7 1 2 2 3 2 1 1 1 8 0 10 9 1 9 8 5 2 1 6 3 9 1 3 1 3 2 1 3 3 2 1 2 3 3 3 3 5 1 9 0 8 1 8 1 9 9 1 6 8 2 1 1 1 3 2 1 3 3 1 8 0 6 4 1 9 7 2 8 3 2 2 2 1 3 3 1 1 9 0 7 6 7 9 7 9 6 1 3 1 3 2 3 1 2 1 1 5 4 3 4 4 3 4 1 8 0 10 4 1 5 8 8 7 6 8 9 7 2 2 1 2 2 1 2 1 1 5 0 11 9 1 1 7 2 6 6 3 9 6 5 3 3 2 2 1 1 5 0 9 1 8 1 8 9 3 1 1 3 3 3 2 1 1 1 4 1 3 1 1 4 1 1 4 4 3 4 1 6 0 7 1 7 4 6 1 4 2 3 1 3 3 2 1 1 7 0 8 1 1 2 7 3 2 9 1 1 1 3 2 1 1 2 1 7 0 11 2 8 4 1 9 6 3 4 2 7 7 1 1 3 1 3 3 1 2 3 5 5 3 7 1 6 0 7 7 1 5 5 5 7 5 1 1 2 3 1 3 1 6 0 7 1 4 3 1 4 1 1 3 3 3 2 1 1 1 9 0 11 2 7 7 3 1 1 1 8 1 7 9 3 1 2 2 1 3 2 2 1 2 5 3 2 1 2 4 3 6 1 7 0 10 6 1 3 1 5 3 7 1 1 4 1 1 2 1 3 1 3 1 9 0 10 8 2 6 5 6 5 1 8 2 4 3 2 1 2 1 2 2 3 1 1 6 0 6 4 1 2 6 7 2 2 2 1 1 1 2 4 5 4 4 3 2 3 7 1 7 0 8 2 3 1 9 8 4 6 4 1 3 3 1 3 1 2 1 6 0 10 1 7 9 4 1 7 9 9 2 8 1 1 1 2 1 3 1 9 0 8 4 1 3 2 6 1 1 2 3 1 1 2 1 3 3 3 2 1 3 2 4 3 2 1 5 6 5 4 4 4 3 7 1 5 0 7 2 6 4 2 9 1 9 1 3 2 1 1 1 6 0 7 1 7 3 6 2 8 1 3 1 1 3 3 1 1 5 0 11 7 9 6 7 9 2 9 5 4 3 1 2 1 3 2 3 1 3 1 2 2 1 1 3 4 1 9 0 11 2 6 5 1 1 2 7 7 3 6 6 1 3 1 1 2 3 1 3 3 1 8 0 9 9 9 4 3 3 1 7 6 5 3 3 1 1 1 2 2 2 1 6 0 9 1 5 5 6 3 2 5 5 2 1 1 2 3 2 3 3 2 3 2 3 7 1 8 0 11 4 2 7 5 1 4 1 4 8 7 5 1 2 3 2 3 3 2 1 1 5 0 6 3 8 3 6 1 6 2 1 3 1 2 1 8 0 7 1 9 4 8 7 2 2 2 2 3 3 3 3 1 3 4 4 3 1 1 5 1 3 6 1 6 0 10 1 5 5 3 6 6 5 7 1 1 2 1 1 2 1 1 1 8 0 10 9 3 6 8 4 1 4 1 4 4 1 1 1 2 2 2 3 2 1 8 0 9 8 1 3 2 9 5 3 7 8 1 1 3 1 1 1 3 2 5 4 5 1 1 4 4 2 5 5 4 5 3 5 1 8 0 8 7 7 1 7 2 6 2 8 3 3 3 2 3 1 3 2 1 7 0 7 1 3 2 7 3 1 1 1 1 2 1 2 1 1 1 9 0 9 5 5 1 4 9 9 9 3 3 2 2 3 3 1 1 3 1 3 2 4 1 3 1 3 4 1 5 0 6 2 1 9 7 8 7 3 1 2 3 1 1 8 0 6 7 2 1 8 9 5 1 3 2 3 2 1 1 3 1 6 0 10 7 1 1 9 2 9 8 6 5 7 1 3 1 2 2 3 1 3 1 3 3 7 1 5 0 6 1 6 3 7 1 8 3 3 3 1 1 1 6 0 9 6 2 9 3 1 1 2 9 7 1 3 2 3 1 2 1 6 0 11 5 2 6 8 4 9 7 8 9 7 1 1 3 2 1 1 1 5 4 2 2 2 3 5 3 4 1 6 0 9 7 6 2 8 5 3 1 3 3 2 3 1 2 3 2 1 9 0 10 5 2 7 2 9 8 2 3 1 2 2 3 2 2 1 1 2 3 3 1 6 0 7 5 2 4 1 5 8 9 1 1 1 3 2 3 1 1 5 4 5 3 2 6 1 5 4 3 7 1 9 0 6 8 5 8 1 1 9 3 1 1 3 1 3 2 3 1 1 9 0 7 2 7 1 1 1 1 1 2 1 2 2 1 1 3 1 1 1 6 0 11 9 1 1 1 8 7 8 4 7 6 5 1 1 2 2 2 2 2 3 5 2 4 5 4 3 6 1 8 0 10 4 2 4 6 2 8 1 1 7 8 1 3 2 2 1 3 1 3 1 6 0 9 9 8 7 8 1 1 7 5 9 3 2 2 2 3 1 1 8 0 10 5 6 2 5 5 8 4 6 1 7 1 1 1 3 1 1 3 3 2 4 4 1 5 5 3 7 1 8 0 8 1 9 3 6 4 1 7 9 3 2 3 1 3 1 1 1 1 5 0 6 3 1 4 1 1 6 1 1 3 2 2 1 9 0 10 4 6 1 9 1 5 3 2 6 8 3 1 2 3 1 1 3 2 3 5 3 5 3 1 2 2 3 4 1 7 0 6 5 7 4 3 1 1 3 3 2 1 2 2 3 1 8 0 6 1 3 1 1 7 8 2 3 3 1 3 2 1 1 1 6 0 7 2 1 9 1 5 7 3 2 1 1 2 2 2 1 3 3 5 3 6 1 5 0 7 1 1 1 3 9 5 1 1 2 2 2 3 1 8 0 6 5 5 1 6 7 2 3 1 3 2 1 3 1 3 1 9 0 6 6 5 7 1 6 8 1 3 1 1 1 2 1 2 2 4 1 5 3 2 1 1 2 5 1 3 8 6 3 5 5 3 4 1 9 0 10 4 1 6 6 7 4 1 8 8 6 1 1 3 2 3 1 1 2 2 1 8 0 11 5 7 5 7 1 3 3 1 5 1 1 3 2 2 1 3 2 1 1 1 9 0 8 6 8 8 1 9 1 9 8 1 2 3 2 1 3 2 2 3 5 1 3 3 3 6 1 8 0 11 1 5 9 9 6 4 7 9 2 4 5 2 1 1 1 2 1 1 2 1 5 0 10 3 2 9 9 1 9 7 7 5 3 2 1 1 1 1 1 7 0 10 3 7 4 4 1 2 6 7 7 7 2 2 1 1 3 3 2 3 3 4 2 3 1 3 6 1 9 0 11 7 6 8 1 9 4 5 6 4 9 1 3 2 3 2 3 2 2 2 1 1 9 0 7 1 9 2 6 5 9 8 1 3 2 1 1 3 3 1 2 1 6 0 6 9 1 1 2 7 1 2 1 3 3 3 1 5 4 5 3 2 2 3 5 1 9 0 7 6 1 7 1 2 7 4 3 1 3 3 2 1 2 1 2 1 7 0 7 1 9 1 5 5 8 8 3 1 2 1 3 1 2 1 7 0 6 8 2 4 1 1 6 1 3 3 2 2 1 2 1 5 3 1 2 3 5 1 7 0 8 8 5 1 9 7 2 3 1 2 3 2 3 3 1 1 1 8 0 8 3 2 5 3 1 9 8 6 3 1 2 3 3 3 1 1 1 9 0 9 7 1 4 6 2 9 7 8 5 2 2 1 1 1 1 1 1 3 2 1 5 2 3 4 7 5 3 2 4 3 3 6 1 8 0 6 1 9 3 7 7 3 2 2 1 1 2 3 1 2 1 8 0 10 4 3 8 1 9 9 4 6 8 1 3 2 1 3 1 2 3 2 1 5 0 7 4 8 1 8 9 8 5 3 3 2 3 1 3 1 2 5 4 2 3 6 1 8 0 6 9 4 1 2 8 8 3 3 1 2 1 2 1 3 1 8 0 9 1 6 9 7 2 1 1 4 5 3 1 1 1 2 2 1 3 1 5 0 11 5 1 8 1 8 2 9 9 3 7 5 2 2 1 2 3 1 1 3 3 4 2 3 6 1 7 0 7 1 3 8 1 3 4 5 2 3 3 3 1 3 1 1 8 0 11 1 9 3 9 7 9 1 2 1 2 2 3 1 2 2 2 1 1 1 1 7 0 9 2 3 1 2 8 7 9 4 8 2 2 2 2 1 1 1 3 2 3 3 5 2 3 7 1 7 0 9 8 3 2 2 5 1 4 6 6 1 3 2 2 2 1 2 1 7 0 8 1 7 7 1 7 7 6 9 2 2 1 2 1 1 3 1 6 0 9 1 2 4 6 7 6 7 8 2 1 3 1 3 3 1 1 5 2 2 2 2 3 6 2 1 4 3 3 7 1 6 0 6 8 8 1 1 4 8 1 2 3 2 1 2 1 8 0 10 5 1 4 6 1 9 3 6 3 4 1 3 2 1 3 2 3 2 1 9 0 8 1 3 2 9 1 4 8 8 1 3 1 1 3 3 3 2 2 1 1 4 1 1 1 1 3 4 1 7 0 7 5 1 1 8 3 2 1 2 3 1 3 2 1 2 1 6 0 10 2 3 1 5 7 3 6 8 1 5 3 2 3 3 1 1 1 8 0 7 6 3 9 3 1 9 5 3 1 1 2 2 3 1 1 5 2 3 2 3 4 1 7 0 9 7 6 7 7 3 3 5 1 9 1 3 1 3 2 3 3 1 8 0 6 4 1 6 7 1 4 3 1 1 2 3 2 3 1 1 6 0 10 3 8 6 1 1 1 3 4 1 7 1 1 1 1 1 3 2 1 1 5 3 5 1 7 0 8 7 1 8 2 6 8 4 9 1 1 2 3 1 2 1 1 9 0 8 4 9 1 1 9 7 3 7 3 1 1 3 3 1 3 2 3 1 7 0 10 2 1 1 8 8 6 9 4 6 4 1 2 1 1 1 3 1 1 4 2 5 1 1 5 2 4 3 3 7 1 5 0 11 5 9 1 5 6 2 6 9 7 1 7 1 2 3 1 2 1 7 0 6 9 5 8 8 1 2 1 1 3 2 3 1 2 1 9 0 7 1 9 9 9 6 2 8 2 1 2 2 1 1 2 2 2 1 1 2 5 1 2 1 3 7 1 7 0 9 7 4 2 3 9 8 6 1 7 1 3 1 2 3 2 3 1 7 0 11 1 8 1 3 9 2 1 8 9 3 8 1 3 1 3 3 1 3 1 5 0 8 7 3 3 9 7 2 5 1 2 1 2 3 3 4 4 2 1 4 1 5 3 7 1 6 0 10 6 7 1 2 7 9 9 8 6 8 2 1 3 1 3 3 1 5 0 9 8 1 2 3 1 2 8 7 3 2 1 3 1 3 1 6 0 10 9 8 8 1 6 7 5 9 6 6 1 2 2 2 2 3 2 5 5 1 5 5 2 3 4 1 5 0 8 5 7 1 1 7 2 5 9 2 2 1 1 1 1 7 0 10 5 8 8 1 9 1 3 1 1 4 2 1 2 3 3 2 1 1 9 0 7 1 9 1 4 3 7 9 2 1 3 3 3 2 3 3 2 5 1 5 3 2 2 3 4 5 3 6 1 9 0 11 5 5 2 6 4 5 3 9 1 9 7 3 2 2 3 3 2 3 1 2 1 9 0 10 4 5 8 7 2 4 7 6 1 4 3 2 2 1 1 2 1 3 3 1 7 0 6 8 1 8 4 8 1 1 3 3 3 1 3 3 3 3 1 4 2 1 3 4 1 7 0 9 6 8 1 1 9 1 6 9 5 3 2 1 3 2 1 3 1 6 0 8 3 4 8 1 1 4 2 2 3 1 2 3 1 2 1 9 0 6 2 4 4 6 1 4 3 1 1 2 1 3 3 1 1 5 1 4 1 3 5 1 6 0 10 1 3 8 1 7 3 3 9 1 3 2 3 3 1 1 2 1 7 0 8 1 1 4 9 6 2 4 9 3 3 3 2 1 2 2 1 5 0 9 3 1 4 1 3 1 4 9 4 3 3 1 1 1 3 5 2 5 3 3 4 1 9 0 11 5 6 2 7 6 7 8 1 8 3 7 1 1 3 1 2 2 2 3 2 1 9 0 11 1 9 4 1 8 7 1 6 7 6 5 1 2 2 2 1 1 1 2 1 1 7 0 11 1 1 2 9 1 1 2 6 7 3 6 3 3 2 2 3 1 1 3 5 5 1 1 4 2 6 2 5 5 3 5 1 8 0 7 1 2 1 3 4 8 4 1 3 1 2 3 1 1 2 1 8 0 9 2 1 7 2 2 9 3 5 3 1 3 3 1 2 2 2 2 1 9 0 9 8 2 2 1 1 8 7 8 8 2 3 1 3 1 1 2 2 1 3 1 2 3 4 3 4 1 9 0 7 1 6 1 5 3 1 7 1 2 3 1 3 1 1 2 2 1 6 0 8 7 3 4 8 6 6 1 2 1 1 1 2 1 1 1 6 0 11 1 3 8 2 5 1 3 7 5 7 9 3 3 1 1 1 2 3 4 1 2 3 6 1 7 0 8 6 3 2 1 4 3 3 8 2 1 1 3 2 1 3 1 9 0 10 8 7 5 5 1 3 1 4 6 1 1 1 1 1 1 3 2 1 3 1 8 0 10 1 3 2 6 7 9 1 5 1 5 1 3 2 2 3 2 2 1 1 2 3 2 3 5 3 7 1 8 0 10 1 9 7 5 2 6 2 8 6 6 3 1 3 3 1 2 2 1 1 8 0 11 7 9 2 3 8 9 3 2 2 1 2 3 3 2 3 1 3 1 1 1 8 0 6 8 9 5 7 8 1 2 3 1 1 3 2 2 3 3 4 2 2 3 2 4 3 5 1 9 0 10 5 1 5 1 7 6 5 1 5 1 2 3 3 1 3 2 1 1 1 1 7 0 10 1 5 4 2 7 3 7 5 6 6 2 2 1 1 1 2 1 1 5 0 9 1 7 9 3 1 7 3 8 6 2 2 1 1 3 2 1 2 2 5 1 1 5 1 5 2 6 4 6 3 5 3 3 6 1 7 0 6 1 3 5 2 5 8 1 3 1 3 3 2 1 1 6 0 11 4 9 1 5 2 2 9 1 4 2 4 3 3 1 1 1 3 1 6 0 10 2 7 8 8 1 4 6 9 8 7 3 2 1 1 2 2 5 3 1 2 2 1 3 6 1 9 0 9 9 8 1 4 1 6 1 7 9 1 3 3 1 3 1 3 3 2 1 7 0 10 2 1 8 2 2 4 1 5 9 9 3 1 2 2 1 1 1 1 5 0 6 1 6 3 8 9 1 3 1 2 3 3 5 5 4 2 1 3 3 5 1 9 0 6 6 6 1 9 8 6 2 1 3 1 3 1 2 1 1 1 5 0 11 6 4 9 1 1 1 6 6 1 7 5 1 1 2 3 1 1 5 0 11 7 3 3 6 3 7 1 2 3 1 6 3 1 2 1 3 3 2 4 2 1 3 7 1 9 0 11 1 8 9 4 2 3 5 4 9 5 6 3 1 2 1 3 1 1 3 2 1 6 0 6 1 2 1 9 1 5 2 1 3 2 3 1 1 6 0 6 1 5 4 7 7 9 3 2 2 1 3 2 3 1 1 3 1 2 3 3 4 1 8 0 10 7 2 7 1 7 8 8 3 7 4 2 3 1 3 1 3 1 1 1 6 0 7 4 8 7 5 3 6 1 1 2 1 3 3 3 1 6 0 6 1 1 9 7 2 7 1 1 1 1 1 2 5 3 2 2 4 7 7 5 4 3 7 1 8 0 10 7 1 7 1 5 2 9 2 1 3 2 1 1 2 1 2 3 3 1 7 0 11 3 4 3 1 4 8 4 3 7 8 7 3 1 1 1 3 2 3 1 6 0 8 1 3 7 9 8 1 1 5 2 1 1 2 2 1 2 3 5 5 4 5 4 3 5 1 7 0 9 4 3 9 6 1 4 6 8 1 1 3 2 2 2 1 1 1 9 0 11 3 6 7 1 5 4 1 3 8 2 5 3 1 1 2 3 1 3 3 3 1 5 0 6 1 9 4 9 2 8 1 1 3 1 1 3 2 1 1 4 3 7 1 8 0 6 7 8 7 1 6 3 1 3 3 1 1 1 3 3 1 7 0 7 8 1 4 1 7 1 8 1 3 2 3 3 3 2 1 7 0 8 6 1 4 5 5 4 9 1 1 1 3 2 2 1 1 1 4 3 1 1 5 3 3 5 1 5 0 8 1 3 8 9 3 4 1 5 2 1 1 3 2 1 5 0 9 4 8 4 2 9 2 1 5 3 2 1 2 3 1 1 6 0 9 1 1 5 4 5 2 2 8 9 3 1 3 2 1 2 2 5 1 3 1 3 7 1 5 0 6 9 9 2 4 9 1 1 3 1 1 2 1 6 0 9 4 9 8 1 2 1 3 8 5 1 3 3 2 1 1 1 6 0 9 9 8 2 4 4 3 1 2 3 2 3 1 1 3 3 2 2 2 5 4 1 1 4 2 3 3 5 4 3 6 1 9 0 10 7 4 1 9 3 6 1 5 9 5 2 2 1 1 1 1 3 2 1 1 8 0 7 1 1 2 9 6 8 8 2 1 3 1 3 1 2 3 1 6 0 10 5 9 6 6 1 5 8 3 5 2 2 3 3 1 1 2 2 2 2 5 2 1 3 4 1 5 0 11 9 8 1 9 3 5 1 4 6 4 5 2 3 3 1 1 1 9 0 10 2 8 7 7 8 1 9 9 1 7 2 1 1 2 3 2 1 1 1 1 9 0 6 4 2 6 4 1 1 1 3 2 3 3 1 2 2 1 3 3 2 1 3 7 1 6 0 8 2 4 6 4 1 8 2 7 3 2 1 2 1 3 1 6 0 8 1 2 6 4 9 3 8 3 3 1 2 1 2 2 1 7 0 10 2 1 5 2 2 8 5 3 5 6 1 3 1 2 2 1 2 1 4 2 4 1 1 2 3 4 1 7 0 9 3 2 1 4 3 2 7 5 5 2 3 2 1 1 3 3 1 8 0 9 1 7 4 3 4 4 2 3 1 3 2 1 1 1 2 1 1 1 7 0 10 4 1 7 4 1 7 3 8 6 1 1 1 3 2 2 3 2 5 5 5 1 3 6 1 5 0 6 7 1 7 1 2 1 3 1 2 2 1 1 6 0 10 3 6 8 8 3 9 1 8 2 7 1 3 1 1 3 1 1 8 0 10 4 6 5 4 1 7 1 4 9 3 2 1 3 1 2 2 1 1 5 1 2 2 4 4 7 6 6 5 5 3 3 7 1 7 0 9 1 9 6 8 5 5 8 3 1 2 1 2 3 2 2 1 1 7 0 7 1 2 7 9 8 5 1 3 2 1 2 1 2 3 1 9 0 8 3 1 4 5 7 1 3 7 3 1 3 3 2 1 3 3 1 2 5 2 2 2 2 3 3 7 1 8 0 7 7 2 9 1 1 2 7 1 2 2 1 3 1 2 2 1 9 0 7 1 4 3 1 9 5 9 2 1 1 3 3 1 1 1 2 1 5 0 8 7 9 3 3 1 4 1 4 1 1 3 3 1 1 2 4 5 1 3 5 3 6 1 6 0 6 3 3 5 1 1 9 2 3 1 2 3 2 1 8 0 7 5 1 1 2 5 8 1 1 3 1 2 3 2 3 2 1 6 0 6 5 2 1 3 6 1 3 3 2 1 1 3 5 3 1 2 2 1 3 5 1 7 0 6 1 2 3 5 9 8 3 3 3 3 3 2 1 1 9 0 11 4 9 1 5 9 2 1 9 6 1 1 1 3 2 3 1 3 1 2 3 1 7 0 7 1 5 4 1 1 2 7 1 1 1 2 1 1 3 1 1 3 2 2 3 5 1 7 0 7 2 1 6 4 5 5 3 2 1 3 3 2 2 3 1 8 0 8 8 4 4 6 1 2 9 7 1 2 2 2 3 1 1 3 1 9 0 9 9 2 1 1 7 3 1 2 9 3 1 3 2 1 1 1 3 1 2 2 5 1 3 3 1 1 5 3 3 5 1 9 0 9 2 2 7 6 3 9 1 9 1 2 2 2 1 3 3 2 1 1 1 6 0 6 7 6 2 1 2 6 2 2 1 1 3 3 1 8 0 10 1 1 8 4 3 3 1 2 4 6 1 1 1 1 1 3 2 1 2 5 1 2 5 3 6 1 5 0 7 1 8 3 9 7 2 3 1 1 1 3 3 1 9 0 10 1 2 3 8 9 2 9 7 4 8 2 2 2 1 3 1 3 2 2 1 9 0 9 9 1 4 1 5 6 1 1 5 1 2 2 1 1 1 1 1 3 2 2 4 2 4 3 3 6 1 6 0 6 4 9 5 7 1 9 1 2 3 2 2 3 1 6 0 11 4 7 8 7 8 6 6 9 1 6 7 1 1 1 2 1 3 1 9 0 11 4 8 8 5 8 6 4 1 6 1 6 3 3 2 1 1 2 2 2 3 3 1 4 1 4 2 3 5 1 7 0 7 6 3 5 8 1 5 1 3 3 2 1 1 1 1 1 8 0 7 1 8 2 3 7 9 2 2 2 1 2 1 3 1 2 1 6 0 10 6 4 6 1 7 5 1 3 9 9 1 1 1 2 1 1 3 4 2 5 4 3 7 1 9 0 7 6 3 7 1 6 2 7 1 2 1 2 2 3 2 1 1 1 8 0 9 8 9 6 1 4 3 1 4 5 2 1 1 1 2 3 1 2 1 7 0 11 1 1 9 6 4 6 3 9 9 7 9 1 3 2 2 1 1 2 4 3 2 1 3 5 4 1 4 1 5 5 3 6 1 8 0 8 4 9 1 4 3 1 3 1 1 2 3 1 2 2 2 1 1 9 0 8 4 1 7 8 1 8 4 7 3 3 2 1 2 2 3 2 1 1 9 0 7 5 9 3 9 4 8 1 3 2 1 1 3 1 2 1 2 3 1 4 1 1 2 3 5 1 6 0 10 3 1 7 9 6 4 2 1 1 6 1 3 3 1 3 3 1 8 0 7 4 1 8 9 7 1 5 2 1 2 2 1 2 1 3 1 7 0 7 1 9 6 3 6 3 3 1 1 1 2 3 1 3 2 1 2 2 5 3 6 1 6 0 10 2 7 2 7 8 2 5 2 1 2 3 2 2 2 1 1 1 9 0 8 9 1 5 4 9 2 8 2 1 1 3 1 1 1 1 2 3 1 7 0 11 8 7 8 8 1 6 1 7 6 9 1 2 2 1 1 2 1 2 3 1 5 2 1 2 3 5 1 5 0 6 1 3 9 8 3 7 1 1 2 3 1 1 9 0 6 6 4 3 1 3 5 2 2 3 3 3 2 3 1 1 1 5 0 8 8 9 8 8 1 5 8 1 1 1 1 1 3 3 1 3 2 2 3 4 1 7 0 6 2 3 1 8 1 1 2 2 1 3 3 1 1 1 6 0 6 6 5 1 5 6 5 3 1 1 1 2 1 1 5 0 10 1 7 1 2 2 1 6 2 7 3 2 2 3 1 1 4 5 3 3 4 5 3 3 5 5 6 2 6 2 5 5 3 6 1 6 0 7 3 9 6 3 7 8 1 1 1 2 2 2 1 1 9 0 8 3 8 6 9 2 1 4 5 1 2 3 3 3 3 3 1 1 1 5 0 8 5 6 5 7 1 1 3 5 1 1 2 1 3 1 3 4 1 5 1 3 6 1 7 0 9 1 4 5 5 1 7 6 3 4 1 3 1 3 1 2 1 1 5 0 10 6 3 6 1 4 9 3 9 3 6 1 1 1 2 3 1 7 0 7 7 3 1 5 4 1 5 3 1 1 1 1 2 2 5 1 1 4 3 3 3 4 1 8 0 11 6 9 8 2 5 6 2 2 5 4 1 3 1 3 1 1 1 2 3 1 9 0 6 8 4 8 2 8 1 3 1 3 1 1 1 1 1 1 1 5 0 9 4 1 9 1 7 4 6 6 1 1 1 2 3 3 2 2 4 3 3 5 1 9 0 6 9 1 2 8 9 9 1 2 3 2 1 3 2 1 3 1 7 0 6 3 2 2 1 2 5 3 2 2 1 1 3 1 1 9 0 6 9 4 2 9 1 7 1 3 1 3 1 1 3 1 1 1 5 1 2 2 3 6 1 9 0 7 1 1 6 9 1 8 1 1 1 3 1 1 3 1 3 3 1 9 0 11 6 7 9 1 4 5 2 5 9 8 4 1 1 1 1 3 3 3 1 3 1 7 0 7 1 5 8 6 8 9 4 2 3 3 2 3 1 3 2 2 3 2 3 3 5 4 7 6 2 5 3 3 6 1 5 0 7 2 9 1 2 5 9 1 1 3 3 3 2 1 9 0 11 1 9 4 9 6 4 1 8 6 4 9 2 1 3 1 3 1 2 1 1 1 9 0 9 1 3 9 4 6 1 8 5 8 2 1 1 2 2 3 1 2 3 1 5 5 2 2 2 3 7 1 5 0 6 8 5 1 4 6 8 1 2 1 1 1 1 5 0 11 9 8 1 6 1 9 9 2 2 7 7 1 1 1 3 3 1 7 0 11 4 9 4 3 7 9 6 6 1 4 4 2 3 2 2 2 2 1 2 4 1 1 3 5 2 3 4 1 6 0 9 6 5 6 7 1 1 8 4 1 1 1 3 1 2 2 1 7 0 9 2 3 4 7 3 1 2 7 4 3 3 1 1 3 1 1 1 9 0 9 8 6 1 8 6 9 6 7 8 2 1 3 1 2 1 3 2 2 5 3 3 4 3 7 1 5 0 7 3 4 1 8 6 5 8 3 3 1 1 1 1 5 0 11 3 2 9 9 7 9 9 1 9 9 7 2 1 1 1 1 1 6 0 10 1 7 4 2 1 2 3 9 7 9 1 2 1 2 1 1 5 4 3 3 4 4 3 3 6 1 8 0 11 8 5 8 5 2 6 1 8 7 5 8 3 2 2 2 1 2 3 2 1 9 0 6 6 4 6 9 6 1 1 3 1 2 2 1 3 2 3 1 5 0 7 4 4 8 1 3 1 1 1 1 3 3 2 2 1 1 3 2 5 1 1 3 4 3 3 5 1 5 0 6 7 1 2 3 2 7 1 1 3 3 2 1 5 0 10 9 1 3 7 5 8 9 5 6 1 3 1 1 2 3 1 6 0 7 5 5 3 3 8 1 8 1 1 3 1 1 3 2 3 4 1 3 3 5 1 6 0 8 5 5 9 5 1 1 9 9 1 1 2 1 3 3 1 5 0 10 4 3 2 3 1 8 4 4 9 5 1 1 3 3 1 1 7 0 6 1 9 3 6 8 7 1 1 3 2 1 3 2 2 1 1 3 4 3 6 1 7 0 9 7 3 8 7 7 7 1 5 4 3 1 1 3 2 3 1 1 9 0 7 1 2 3 4 5 5 2 1 1 3 3 2 1 2 1 1 1 7 0 8 3 9 1 1 8 9 5 8 2 3 2 1 2 3 1 3 4 5 5 5 2 3 7 1 5 0 9 1 1 1 7 6 8 1 3 8 3 1 1 3 2 1 5 0 11 2 2 4 2 4 1 4 3 3 4 5 3 3 1 2 2 1 8 0 10 5 3 5 9 1 2 1 9 5 7 1 1 1 1 2 2 3 3 1 5 2 2 2 5 2 6 3 2 5 5 3 4 1 8 0 9 3 6 5 6 1 2 5 9 3 2 2 1 1 1 2 2 1 1 8 0 10 1 5 2 4 3 2 1 1 5 2 1 3 3 2 1 1 1 2 1 7 0 9 6 3 6 1 1 4 1 2 4 3 1 1 3 2 2 3 1 1 3 3 3 4 1 8 0 10 9 5 1 1 1 2 1 9 6 9 3 2 3 1 1 2 2 2 1 7 0 10 6 8 6 7 7 6 6 7 8 1 3 2 2 3 1 2 2 1 6 0 8 6 9 7 2 6 9 6 1 3 1 3 3 2 1 5 1 1 3 3 5 1 5 0 8 5 1 2 1 7 5 6 9 2 1 3 3 1 1 8 0 9 3 9 1 7 9 2 6 5 2 1 2 2 3 2 1 2 2 1 5 0 10 8 9 3 7 2 9 2 1 9 4 1 1 1 1 2 3 2 1 1 2 3 4 1 6 0 10 8 4 4 4 1 7 1 9 9 8 3 2 2 1 1 2 1 5 0 8 2 5 1 6 8 1 9 7 3 2 1 1 2 1 6 0 10 6 1 5 1 7 2 7 7 8 8 2 1 1 2 2 2 4 3 4 5 3 7 1 7 0 10 1 7 1 8 6 7 1 9 1 7 2 3 3 3 2 1 1 1 7 0 11 8 5 1 9 9 5 2 6 2 3 9 1 2 1 3 2 1 1 1 9 0 10 1 5 4 7 5 4 6 8 3 6 3 2 1 1 3 3 3 3 3 2 2 1 5 4 1 3 2 4 5 1 4 4 4 3 5 1 8 0 7 8 6 5 1 7 8 8 2 1 2 1 1 2 3 2 1 7 0 8 3 5 7 1 4 3 7 9 2 1 1 3 2 1 2 1 8 0 6 1 7 1 3 9 6 1 2 1 1 1 2 2 2 1 5 1 4 4 3 7 1 5 0 11 8 5 4 9 1 2 4 1 6 3 1 3 2 2 1 1 1 6 0 9 7 6 6 4 5 2 3 1 6 2 3 2 1 3 1 1 9 0 7 2 8 1 5 2 9 9 2 2 1 1 3 3 3 2 2 2 2 1 3 5 1 4 3 4 1 7 0 9 1 4 1 6 7 1 9 5 6 1 3 1 3 1 2 2 1 8 0 11 5 9 4 9 8 9 6 8 5 4 1 2 3 2 1 3 1 1 3 1 5 0 7 7 1 7 2 9 5 9 3 2 1 3 1 3 4 2 3 3 5 1 7 0 10 4 6 4 9 1 2 9 6 9 8 2 3 2 1 1 1 3 1 6 0 6 4 7 3 7 1 8 1 1 2 3 3 2 1 7 0 8 8 4 4 2 4 1 3 8 1 1 1 2 2 1 1 5 5 2 5 2 1 3 1 2 5 4 3 5 1 9 0 6 2 7 2 6 1 5 1 2 1 1 3 2 1 3 2 1 8 0 6 9 3 1 2 4 8 1 1 1 3 1 2 2 2 1 7 0 6 6 1 1 5 3 3 1 2 1 2 1 1 2 3 2 1 5 5 3 4 1 8 0 10 7 3 3 8 8 2 1 7 3 2 2 3 2 1 1 3 2 3 1 9 0 7 6 7 7 1 6 5 7 2 2 1 1 3 2 2 2 2 1 6 0 8 1 1 8 3 3 7 1 4 1 3 2 1 1 1 2 3 3 4 3 5 1 5 0 11 5 5 4 1 4 8 6 1 7 1 5 1 2 1 3 1 1 6 0 9 1 1 7 6 5 5 3 3 3 1 3 1 1 3 3 1 9 0 9 2 6 9 3 1 5 7 9 9 3 1 1 2 2 3 1 1 2 3 3 4 1 2 3 5 1 8 0 11 1 1 4 5 5 2 6 9 4 5 3 1 3 3 3 1 1 1 2 1 7 0 10 3 1 1 8 7 5 6 1 4 8 3 3 1 1 3 1 2 1 9 0 11 5 2 5 1 7 4 6 8 6 1 8 2 1 3 1 3 1 2 1 3 2 2 2 5 3 3 4 1 8 0 9 7 1 2 9 7 5 2 3 7 1 2 3 3 3 1 1 1 1 6 0 6 8 1 4 1 5 7 3 3 1 1 3 2 1 7 0 8 8 3 9 8 6 2 1 1 3 1 2 3 1 3 1 2 4 4 4 6 7 3 1 7 3 2 1 4 6 8 3 3 3 3 11 1"},function(t,e,n){"use strict";n.r(e);e.default="404 players; last marble is worth 71852 points"},function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=n(3),v=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){for(var t=this,e=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),o=n(11)("./".concat(e)),i=(this.props.customPuzzleInput?this.props.customPuzzleInput:o.default).split("\n"),s=[],a=0,r=0,c=0,l=0,u=0;u<i.length;u++){var p=/position=<(?: *)([-]?\d*?),(?: *)([-]?\d*?)> velocity=<(?: *)([-]?\d*?),(?: *)([-]?\d*?)>$/g.exec(i[u]),v=Number(p[1]),h=Number(p[2]);v<a&&(a=v),h<r&&(r=h),v>c&&(c=v),h>l&&(l=h);var f={start:[v,h],velocity:[Number(p[3]),Number(p[4])]};s.push(f)}for(var m=Math.abs(a),y=Math.abs(r),b=[],d=0;d<s.length;d++){var g=s[d].start,z=g[0]+m,E=g[1]+y;s[d].start=[z,E],s[d].currentPos=[z,E],b[E]||(b[E]=[]),b[E].push(z)}for(var S,P,O=c+m,j=l+y,k=0,I=function(){var e=["Exactly how many seconds would they have needed to wait for that message to appear?","".concat(--k,"!!!!!!! \ud83e\udd84")];t.setState({content:e})},D=function(){var t,e,n,o;k++,b=[],S=O,P=j;for(var i=0;i<s.length;i++){var a=s[i].currentPos[0]+s[i].velocity[0],r=s[i].currentPos[1]+s[i].velocity[1];s[i].currentPos=[a,r],b[r]||(b[r]=[]),b[r].push(a),(void 0===t||a<t)&&(t=a),(void 0===e||r<e)&&(e=r),(void 0===n||a>n)&&(n=a),(void 0===o||r>o)&&(o=r)}if(j=o-e+1,(O=n-t+1)>S)return O=S,j=P,"fuck";m=t,y=e};;)if("fuck"===D()){I();break}}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){console.log(t),this.setState({hasError:!0})}}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):l.a.createElement("div",null,l.a.createElement("div",{className:"my-4"},l.a.createElement(p.p,{className:"Solution__Jumbotron"},l.a.createElement("h3",null,this.state.content[0]),l.a.createElement("hr",{className:"my-2"}),l.a.createElement("div",null,this.state.content[1]))))}}]),e}(l.a.Component);e.default=v},function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=n(3),v=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){for(var t=this,e=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),o=n(11)("./".concat(e)),i=this.props.customPuzzleInput?this.props.customPuzzleInput:o.default,s=Number(i),a=function(t,e){return Math.trunc(((t+10)*e+s)*(t+10)/100%10)-5},r=[],c=0;c<300;c++){for(var u=c+1,p=[],v=0;v<300;v++){var h=a(v+1,u);p.push(h)}r.push(p)}console.log(r);for(var f,m=[],y=0,b=0;b<298;b++){for(var d=b+1,g=[],z=0;z<298;z++){var E=z+1,S=0;S+=r[b][z],S+=r[b][z+1],S+=r[b][z+2],S+=r[b+1][z],S+=r[b+1][z+1],S+=r[b+1][z+2],S+=r[b+2][z],S+=r[b+2][z+1],S+=r[b+2][z+2],g.push(S),S>y&&(y=S,f=[E,d])}m.push(g)}console.log(m),console.log(f);!function(){for(var e=f[0],n=f[1],o=[],i=0;i<300;i++)if(i+1>n-2&&i+1<n+4){for(var s=[],a=0;a<300;a++)a+1>e-2&&a+1<e+4&&(i>=f[1]-1&&i<f[1]-1+3&&a>=f[0]-1&&a<f[0]-1+3?s.push(l.a.createElement("span",{style:{color:"red",fontWeight:"bold"}},r[i][a].toString().padStart(2))):s.push(r[i][a].toString().padStart(2)));o.push(s)}var c=[];o.forEach(function(t,e){c.push(l.a.createElement("div",{key:e},t))});var u=["What is the X,Y coordinate of the top-left fuel cell of the 3x3 square with the largest total power?","".concat(f[0],",").concat(f[1],"! \ud83e\udd8b"),c];t.setState({content:u})}()}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){console.log(t),this.setState({hasError:!0})}}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):l.a.createElement("div",null,l.a.createElement("pre",{className:"my-4 monospace",style:{fontSize:"2rem"}},this.state.content[2]),l.a.createElement(p.p,{className:"Solution__Jumbotron"},l.a.createElement("h3",null,this.state.content[0]),l.a.createElement("hr",{className:"my-2"}),l.a.createElement("div",null,this.state.content[1])))}}]),e}(l.a.Component);e.default=v},function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=n(3),v=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:"",progress:0},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){for(var t=this,e=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),o=n(11)("./".concat(e)),i=this.props.customPuzzleInput?this.props.customPuzzleInput:o.default,s=Number(i),a=function(t,e){return Math.trunc(((t+10)*e+s)*(t+10)/100%10)-5},r=[],c=0;c<300;c++){for(var u=c+1,p=[],v=0;v<300;v++){var h=a(v+1,u);p.push(h)}r.push(p)}for(var f,m=0,y=[],b=function(e){var n=new Promise(function(t){setTimeout(function(){t(function(t){for(var e=[],n=0;n<301-t;n++){for(var o=n+1,i=[],s=0;s<301-t;s++){for(var a=s+1,c=0,l=0;l<t;l++)for(var u=0;u<t;u++)c+=r[n+l][s+u];i.push(c),c>m&&(m=c,f=[a,o,t])}e.push(i)}}(e))},0)}).then(function(){t.setState({progress:e-1});var n=document.getElementsByClassName("progress-bar")[0];n.style.display="none",n.offsetHeight,n.style.display="block"});y.push(n)},d=1;d<301;d++)b(d);Promise.all(y).then(function(){!function(){for(var e=f[0],n=f[1],o=f[2],i=[],s=0;s<300;s++)if(s+1>n-2&&s+1<n+o+1){for(var a=[],c=0;c<300;c++)c+1>e-2&&c+1<e+o+1&&(s>=n-1&&s<n-1+o&&c>=e-1&&c<e-1+o?a.push(l.a.createElement("span",{style:{color:"red",fontWeight:"bold"}},r[s][c].toString().padStart(2))):a.push(r[s][c].toString().padStart(2)));i.push(a)}var u=[];i.forEach(function(t,e){u.push(l.a.createElement("div",{key:e},t))});var p=["What is the X,Y,size identifier of the square with the largest total power?","".concat(f[0],",").concat(f[1],",").concat(f[2],"! \ud83d\ude07"),u];t.setState({content:p,progress:300})}()})}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){console.log(t),this.setState({hasError:!0})}}},{key:"componentWillUnmount",value:function(){}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):(300===this.state.progress&&(t=l.a.createElement(p.p,{className:"Solution__Jumbotron"},l.a.createElement("h3",null,this.state.content[0]),l.a.createElement("hr",{className:"my-2"}),l.a.createElement("div",null,this.state.content[1]))),l.a.createElement("div",null,l.a.createElement("div",{className:"text-center"},"".concat(this.state.progress," / 300")),l.a.createElement(p.x,{value:this.state.progress/3,style:{transform:"translateZ(0)"}}),l.a.createElement("pre",{className:"my-4 monospace"},this.state.content[2]),t));var t}}]),e}(l.a.Component);e.default=v},function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=n(3),v=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){var t=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),e=n(11)("./".concat(t)),o=(this.props.customPuzzleInput?this.props.customPuzzleInput:e.default).split("\n"),i=o.shift();i=i.substring(15,i.length),o.shift(),console.log(i),console.log(o);for(var s=[],a=0;a<o.length;a++)"#"===o[a][9]&&s.push(o[a].substring(0,5));console.log(s);var r=[],c=".".repeat(22),l=c+i+c,u=l.length;console.log(l),r.push(l);for(var p="".concat(l,"\n"),v=1;v<=20;v++){for(var h=r[r.length-1],f="..",m=2;m<u-2;m++){var y=h.substring(m-2,m+3);-1!==s.indexOf(y)?f+="#":f+="."}f+="..",r.push(f),p+="".concat(f,"\n")}var b=r[20],d=0;console.log(b);for(var g=0;g<b.length;g++){var z=g-22;"#"===b[g]&&(d+=z)}this.setState({content:[p,d]})}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){console.log(t),this.setState({hasError:!0})}}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):l.a.createElement("div",null,l.a.createElement("pre",{className:"my-4 monospace"},this.state.content[0]),l.a.createElement(p.p,{className:"Solution__Jumbotron"},l.a.createElement("h3",null,"After 20 generations, what is the sum of the numbers of all pots which contain a plant?"),l.a.createElement("hr",{className:"my-2"}),l.a.createElement("div",null,this.state.content[1])))}}]),e}(l.a.Component);e.default=v},function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=n(3),v=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){var t=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),e=n(11)("./".concat(t)),o=(this.props.customPuzzleInput?this.props.customPuzzleInput:e.default).split("\n"),i=o.shift();i=i.substring(15,i.length),o.shift(),console.log(i),console.log(o);for(var s=[],a=0;a<o.length;a++)"#"===o[a][9]&&s.push(o[a].substring(0,5));console.log(s);var r=500,c=r,l=[],u=".".repeat(r+2),p=u+i+u,v=p.length;console.log(p),l.push(p);for(var h,f="".concat(i,"\n"),m=["this represents the 0th gen"],y=1;y<=r;y++){var b=m[m.length-1],d=l[l.length-1],g="..",z=null,E=null;h=0;for(var S=2;S<v-2;S++){var P=d.substring(S-2,S+3);-1!==s.indexOf(P)?(g+="#",h++,null===z&&(z=S),E=null):(g+=".",null===E&&(E=S))}g+="..",l.push(g);var O=g.substring(z,E);f+="".concat(O,"\n"),m.push(O),b===O&&(r=y)}console.log(l);for(var j=l[r],k=0,I=0;I<j.length;I++){var D=I-(c+2);"#"===j[I]&&(k+=D)}var C=m[r],N=l[r-1].indexOf(C);k+=h*(j.indexOf(C)-N)*(5e10-r),this.setState({content:["".concat(f,"\n\n...and so on"),k]})}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){console.log(t),this.setState({hasError:!0})}}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):l.a.createElement("div",null,l.a.createElement("pre",{className:"my-4 monospace"},this.state.content[0]),l.a.createElement(p.p,{className:"Solution__Jumbotron"},l.a.createElement("h3",null,"After fifty billion generations, what is the sum of the numbers of all pots which contain a plant?"),l.a.createElement("hr",{className:"my-2"}),l.a.createElement("div",null,this.state.content[1])))}}]),e}(l.a.Component);e.default=v},function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=n(3),v=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){var t,e,o,i,s=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),a=n(11)("./".concat(s)),r=a.emojis,c=(this.props.customPuzzleInput?this.props.customPuzzleInput:a.default).split("\n"),u=[],p=!0,v=!1,h=void 0;try{for(var f,m=c[Symbol.iterator]();!(p=(f=m.next()).done);p=!0){var y=f.value,b=/(.*?), (.*?)$/g.exec(y);console.log(b);var d=Number(b[1]),g=Number(b[2]);u.push([d,g]),(!t||d<t)&&(t=d),(!e||d>e)&&(e=d),(!o||g<o)&&(o=g),(!i||g>i)&&(i=g)}}catch(D){v=!0,h=D}finally{try{p||null==m.return||m.return()}finally{if(v)throw h}}var z=i-o,E=Array(e-t).fill(0),S=Array(z).fill(null),P=[];u.forEach(function(e,n){var i=[e[0]-t,e[1]-o];P.push(i)}),S.forEach(function(t,e){null===t&&(S[e]=E.slice(0)),S[e].forEach(function(t,n){var o,i=[];P.forEach(function(t,o){var s=t[0]-n;s=-s>0?-s:s;var a=t[1]-e,r=s+(a=-a>0?-a:a);i.push({coordIndex:o,totalDiff:r})}),i.sort(function(t,e){return t.totalDiff-e.totalDiff}),o=i[0].totalDiff===i[1].totalDiff?99:i[0].coordIndex,S[e][n]=o})});var O=[],j=[];S.forEach(function(t,e){S[e].forEach(function(t,n){0!==e&&e!==S.length-1&&0!==n&&n!==S[e].length-1||O.push(t)})}),S.forEach(function(t,e){S[e].forEach(function(t,n){-1!==O.indexOf(t)&&(S[e][n]=99),j[S[e][n]]||(j[S[e][n]]=[S[e][n],0]),j[S[e][n]][1]++})}),j.sort(function(t,e){return e[1]-t[1]});var k=[];S.forEach(function(t,e){var n=[];S[e].forEach(function(t,e){n.push(r[t])}),k.push(l.a.createElement("div",{key:e},n))});var I="".concat(r[j[1][0]]," has the largest area size: ").concat(j[1][1]);this.setState({content:[k,I]})}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){console.log(t),this.setState({hasError:!0})}}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):l.a.createElement("div",null,l.a.createElement(p.p,{className:"my-4 Solution__Jumbotron"},l.a.createElement("h3",null,"What is the size of the largest area that isn't infinite?"),l.a.createElement("hr",{className:"my-2"}),l.a.createElement("div",null,this.state.content[1])),l.a.createElement("pre",{className:"my-4 monospace font-small"},this.state.content[0]))}}]),e}(l.a.Component);e.default=v},function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=n(3),v=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){var t,e,o,i,s=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),a=n(11)("./".concat(s)),r=a.emojis,c=(this.props.customPuzzleInput?this.props.customPuzzleInput:a.default).split("\n"),u=[],p=!0,v=!1,h=void 0;try{for(var f,m=c[Symbol.iterator]();!(p=(f=m.next()).done);p=!0){var y=f.value,b=/(.*?), (.*?)$/g.exec(y),d=Number(b[1]),g=Number(b[2]);u.push([d,g]),(!t||d<t)&&(t=d),(!e||d>e)&&(e=d),(!o||g<o)&&(o=g),(!i||g>i)&&(i=g)}}catch(I){v=!0,h=I}finally{try{p||null==m.return||m.return()}finally{if(v)throw h}}var z=i-o,E=Array(e-t).fill(0),S=Array(z).fill(null),P=[];u.forEach(function(e,n){var i=[e[0]-t,e[1]-o];P.push(i)});var O=0;S.forEach(function(t,e){null===t&&(S[e]=E.slice(0)),S[e].forEach(function(t,n){var o=[];P.forEach(function(t,i){var s=t[0]-n;s=-s>0?-s:s;var a=t[1]-e,r=s+(a=-a>0?-a:a);o.push(r)});var i=0;o.forEach(function(t){i+=t});var s=88;i<1e4&&(s=11,O++),S[e][n]=s})});var j=[];S.forEach(function(t,e){var n=[];S[e].forEach(function(t,e){n.push(r[t])}),j.push(l.a.createElement("div",{key:e},n))});var k="".concat(O,"!!!");this.setState({content:[j,k]})}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){console.log(t),this.setState({hasError:!0})}}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):l.a.createElement("div",null,l.a.createElement(p.p,{className:"my-4 Solution__Jumbotron"},l.a.createElement("h3",null,"What is the size of the region containing all locations which have a total distance to all given coordinates of less than 10000???"),l.a.createElement("hr",{className:"my-2"}),l.a.createElement("div",null,this.state.content[1])),l.a.createElement("pre",{className:"my-4 monospace font-small"},this.state.content[0]))}}]),e}(l.a.Component);e.default=v},function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=n(3),v=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){var t=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),e=n(11)("./".concat(t)),o=(this.props.customPuzzleInput?this.props.customPuzzleInput:e.default).split("\n"),i=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],s={},a=!0,r=!1,c=void 0;try{for(var l,u=o[Symbol.iterator]();!(a=(l=u.next()).done);a=!0){var p=l.value,v=p[5],h=p[36];s[h]?(s[h].prereqs.push(v),s[h].remaining.push(v)):s[h]={prereqs:[v],remaining:[v]}}}catch(g){r=!0,c=g}finally{try{a||null==u.return||u.return()}finally{if(r)throw c}}for(var f="",m=!1,y=function(t){for(var e in s){var n=s[e].remaining,o=n.indexOf(t);-1!==o&&n.splice(o,1)}};!m;){for(var b=0;b<i.length;b++){var d=i[b];if(-1===f.indexOf(d)&&(!s[d]||0===s[d].remaining.length)){f+=d,y(d);break}}26===f.length&&(m=!0)}this.setState({content:"The proper order is ".concat(f,"! \ud83c\udf08")})}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){console.log(t),this.setState({hasError:!0})}}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):l.a.createElement("div",null,l.a.createElement(p.p,{className:"my-4 Solution__Jumbotron"},l.a.createElement("h3",null,"In what order should the steps in your instructions be completed?"),l.a.createElement("hr",{className:"my-2"}),l.a.createElement("div",null,this.state.content)))}}]),e}(l.a.Component);e.default=v},function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=n(3),v=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){var t=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),e=n(11)("./".concat(t)),o=(this.props.customPuzzleInput?this.props.customPuzzleInput:e.default).split("\n"),i=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],s={},a=function(t,e){var n=60;return{prereqs:e?[e]:[],remaining:e?[e]:[],time:n+=i.indexOf(t)+1}},r=!0,c=!1,u=void 0;try{for(var p,v=o[Symbol.iterator]();!(r=(p=v.next()).done);r=!0){var h=p.value,f=h[5],m=h[36];s[m]?(s[m].prereqs.push(f),s[m].remaining.push(f)):s[m]=a(m,f)}}catch(N){c=!0,u=N}finally{try{r||null==v.return||v.return()}finally{if(c)throw u}}for(var y=0;y<i.length;y++){var b=i[y];s[b]||(s[b]=a(b))}console.log(s);for(var d=[],g=0,z=[],E="",S="",P=new Array(5),O=0;O<5;O++)P[O]={task:null,remainingSeconds:0};var j=function(){console.log("GET MORE");for(var t=0;t<i.length;t++){var e=i[t];-1===E.indexOf(e)&&0===s[e].remaining.length&&z.push(e)}},k=function(){z.forEach(function(t){for(var e=0;e<P.length;e++)if(null===P[e].task){P[e].task=t,P[e].remainingSeconds=s[t].time,E+=t;break}}),z=[]},I=function(){k();var t=[g,P[0].task||".",P[1].task||".",P[2].task||".",P[3].task||".",P[4].task||".",S];g++,P.forEach(function(t,e){t.task&&(P[e].remainingSeconds--,0===P[e].remainingSeconds&&(!function(t){for(var e in s){var n=s[e].remaining.indexOf(t);-1!==n&&s[e].remaining.splice(n,1)}}(t.task),S+=t.task,P[e].task=null,j()))}),d.push(t)};for(j(),k();S.length<26;)I();I();var D,C=[];d.forEach(function(t,e){var n=[];t.forEach(function(t,o){n.push(l.a.createElement("td",{key:o},t)),e===d.length-1&&0===o&&(D=t)}),C.push(l.a.createElement("tr",{key:e},n))}),this.setState({content:[C,D]})}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){console.log(t),this.setState({hasError:!0})}}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):l.a.createElement("div",null,l.a.createElement(p.z,{className:"my-4",size:"sm",striped:!0,hover:!0},l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Second"),l.a.createElement("th",null,"Worker 1"),l.a.createElement("th",null,"Worker 2"),l.a.createElement("th",null,"Worker 3"),l.a.createElement("th",null,"Worker 4"),l.a.createElement("th",null,"Worker 5"),l.a.createElement("th",null,"Done"))),l.a.createElement("tbody",null,this.state.content[0])),l.a.createElement(p.p,{className:"my-4 Solution__Jumbotron"},l.a.createElement("h3",null,"How many seconds will it take to complete all of the steps?"),l.a.createElement("hr",{className:"my-2"}),l.a.createElement("div",null,this.state.content[1])))}}]),e}(l.a.Component);e.default=v},function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){var t=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),e=n(11)("./".concat(t)),o=(this.props.customPuzzleInput?this.props.customPuzzleInput:e.default).split(" ").map(Number);console.log(o);var i=[],s={},a=0;i[a]=[];for(var r=0,c=0,l=null,u=function(t,e,n){var o={childCount:t,childrenRemaining:t,level:a,metaCount:e,meta:null,parentId:n};i[a].push(o),s[r]=o},p=0;;){var v=s[r];if(v)if(v.childrenRemaining){a++,v.childrenRemaining--,i[a]||(i[a]=[]),l=r,r=++c,u(o[0+(p+=2)],o[1+p],l)}else{p+=2;var h=o.slice(p,p+v.metaCount);p+=v.metaCount,v.meta=h;var f=s[r].parentId;if(null===f){console.log("momma node is out of children, all done.");break}if(s[f].childrenRemaining)s[f].childrenRemaining--,r=++c,u(o[0+p],o[1+p],l);else a--,v=s[r=f],l=s[r].parentId,p-=2}else u(o[0],o[1],l)}console.log(s);var m=0;for(var y in s){var b=s[y].meta,d=!0,g=!1,z=void 0;try{for(var E,S=b[Symbol.iterator]();!(d=(E=S.next()).done);d=!0){m+=E.value}}catch(O){g=!0,z=O}finally{try{d||null==S.return||S.return()}finally{if(g)throw z}}}var P="What is the sum of all metadata entries? ".concat(m,"!");this.setState({content:P})}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){this.setState({hasError:!0})}}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):l.a.createElement("div",null,l.a.createElement("div",{className:"my-4 monospace"},this.state.content))}}]),e}(l.a.Component);e.default=p},function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){var t=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),e=n(11)("./".concat(t)),o=(this.props.customPuzzleInput?this.props.customPuzzleInput:e.default).split(" ").map(Number),i=[],s={},a=0;i[a]=[];for(var r=0,c=0,l=null,u=function(t,e,n){var o={childCount:t,children:[],childrenRemaining:t,id:r,level:a,meta:null,metaCount:e,parentId:n,value:null};i[a].push(o),s[r]=o},p=0;;){var v=s[r];if(v)if(v.childrenRemaining){a++,v.childrenRemaining--,i[a]||(i[a]=[]),l=r,r=++c,s[l].children.push(r),u(o[0+(p+=2)],o[1+p],l)}else{p+=2;var h=o.slice(p,p+v.metaCount);p+=v.metaCount,v.meta=h;var f=s[r].parentId;if(null===f){console.log("momma node is out of children, all done.");break}if(s[f].childrenRemaining)s[f].childrenRemaining--,r=++c,s[f].children.push(r),u(o[0+p],o[1+p],l);else a--,v=s[r=f],l=s[r].parentId,p-=2}else u(o[0],o[1],l)}for(var m=i.length-1;m>=0;m--){var y=i[m],b=!0,d=!1,g=void 0;try{for(var z,E=y[Symbol.iterator]();!(b=(z=E.next()).done);b=!0){var S=z.value,P=S.meta,O=S.children;if(0===S.childCount){var j=P.reduce(function(t,e){return t+e},0);S.value=j}else{var k=!0,I=!1,D=void 0;try{for(var C,N=P[Symbol.iterator]();!(k=(C=N.next()).done);k=!0){var w=O[C.value-1];w&&(S.value+=s[w].value)}}catch(M){I=!0,D=M}finally{try{k||null==N.return||N.return()}finally{if(I)throw D}}}}}catch(M){d=!0,g=M}finally{try{b||null==E.return||E.return()}finally{if(d)throw g}}}console.log(i);var x="What is the value of the root node? ".concat(s[0].value);this.setState({content:x})}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){this.setState({hasError:!0})}}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):l.a.createElement("div",null,l.a.createElement("div",{className:"my-4 monospace"},this.state.content))}}]),e}(l.a.Component);e.default=p},function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=n(3),v=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){var t=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),e=n(11)("./".concat(t)),o=this.props.customPuzzleInput?this.props.customPuzzleInput:e.default,i=/(.*?) players; last marble is worth (.*?) points$/g.exec(o),s=Number(i[1]),a=Number(i[2]),r=[],c=Array.from(Array(s).keys(),function(t){return t+1}),l=[],u={};c.forEach(function(t){u[t]=0});var p=0,v=null,h=0;r.push(p),l.push({player:v,value:h});var f,m=0;for(p++;p<=a;p++){if(p%1e5===0&&console.log(p),v=c[p%c.length-1]||c[c.length-1],h=0,p%23===0){h+=p;var y=m-7;y<0&&(y+=r.length),h+=r[y],r.splice(y,1),(m=y)===r.length&&(m=0),u[v]+=h}else{var b=m+2;b>=r.length+1&&(b-=r.length),r.splice(b,0,p),m=b}l.push({player:v,value:h})}console.log(r),console.log(l),console.log(u);var d=0;for(var g in u)u[g]>d&&(d=u[g],f=g);var z=["What is the winning Elf's score?","Player ".concat(f," won with ").concat(d," points!")];this.setState({content:z})}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){this.setState({hasError:!0})}}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):l.a.createElement("div",null,l.a.createElement("div",{className:"my-4"},l.a.createElement(p.p,{className:"Solution__Jumbotron"},l.a.createElement("h3",null,this.state.content[0]),l.a.createElement("hr",{className:"my-2"}),l.a.createElement("div",null,this.state.content[1]))))}}]),e}(l.a.Component);e.default=v},function(t,e,n){"use strict";n.r(e);var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(9),p=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={hasError:!1,content:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"componentDidCatch",value:function(t,e){this.setState({hasError:!0})}},{key:"runSolution",value:function(){var t=this.props.currentPuzzleStr.substring(0,this.props.currentPuzzleStr.length-5),e=n(11)("./".concat(t)),o=this.props.customPuzzleInput?this.props.customPuzzleInput:e.default,i=/(.*?) players; last marble is worth (.*?) points$/g.exec(o),s=Number(i[1]),a=100*Number(i[2]),r=[],c=Array.from(Array(s).keys(),function(t){return t+1}),l=[],u={};c.forEach(function(t){u[t]=0});var p=0,v=null,h=0;r.push(p),l.push({player:v,value:h});var f,m=0;for(p++;p<=a;p++){if(p%1e5===0&&console.log(p),v=c[p%c.length-1]||c[c.length-1],h=0,p%23===0){h+=p;var y=m-7;y<0&&(y+=r.length),h+=r[y],r.splice(y,1),(m=y)===r.length&&(m=0),u[v]+=h}else{var b=m+2;b>=r.length+1&&(b-=r.length),r.splice(b,0,p),m=b}l.push({player:v,value:h})}console.log(r),console.log(l),console.log(u);var d=0;for(var g in u)u[g]>d&&(d=u[g],f=g);var z="What is the winning Elf's score? Player ".concat(f," won with ").concat(d," points!");this.setState({content:z})}},{key:"componentDidMount",value:function(){try{this.runSolution()}catch(t){this.setState({hasError:!0})}}},{key:"render",value:function(){return this.state.hasError?l.a.createElement(u.a,{customPuzzleInput:this.props.customPuzzleInput}):l.a.createElement("div",null,l.a.createElement("div",{className:"my-4 monospace"},this.state.content))}}]),e}(l.a.Component);e.default=p},function(t,e,n){"use strict";(function(t){var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=(n(61),n(44)),p=n(50),v=(n(73),n(49)),h=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={customPuzzleInputsOn:!1},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"setCustomPuzzleInputsOn",value:function(t){this.setState({customPuzzleInputsOn:t})}},{key:"render",value:function(){var t=this;return l.a.createElement("div",{className:"App"},l.a.createElement(u.a,{customPuzzleInputsOn:this.state.customPuzzleInputsOn,setCustomPuzzleInputsOn:function(e){return t.setCustomPuzzleInputsOn(e)}}),l.a.createElement(p.a,{customPuzzleInputsOn:this.state.customPuzzleInputsOn,setCustomPuzzleInputsOn:function(e){return t.setCustomPuzzleInputsOn(e)}}))}}]),e}(c.Component);e.a=Object(v.hot)(t)(h)}).call(this,n(60)(t))},function(t,e,n){"use strict";n.d(e,"a",function(){return h});var o=n(45),i=n(4),s=n(5),a=n(7),r=n(6),c=n(8),l=n(15),u=n(1),p=n.n(u),v=n(3),h=function(t){function e(t){var n;return Object(i.a)(this,e),(n=Object(a.a)(this,Object(r.a)(e).call(this,t))).toggle=n.toggle.bind(Object(l.a)(Object(l.a)(n))),n.state={navIsOpen:!1,dropdownIsOpen:!1},n}return Object(c.a)(e,t),Object(s.a)(e,[{key:"toggle",value:function(t){this.setState(Object(o.a)({},t,!this.state[t]))}},{key:"render",value:function(){var t=this,e=this.props.customPuzzleInputsOn?"Custom":"Cody\u2019s";return p.a.createElement("div",{className:"Header"},p.a.createElement(v.u,{color:"dark",dark:!0,expand:"md"},p.a.createElement(v.v,{href:"/"},"Advent of Code 2018"),p.a.createElement(v.w,{onClick:function(){return t.toggle("navIsOpen")}}),p.a.createElement(v.g,{isOpen:this.state.navIsOpen,navbar:!0},p.a.createElement(v.r,{className:"ml-auto",navbar:!0},p.a.createElement(v.s,null,p.a.createElement(v.t,{href:"https://gitlab.com/uturnr/advent-of-bad-code-2018"},"GitLab")),p.a.createElement(v.i,{isOpen:this.state.dropdownIsOpen,toggle:function(){return t.toggle("dropdownIsOpen")},nav:!0,inNavbar:!0},p.a.createElement(v.l,{nav:!0,caret:!0},"Using ".concat(e," Puzzle Inputs")),p.a.createElement(v.k,{right:!0},p.a.createElement(v.j,null,p.a.createElement("div",{onClick:function(){return t.props.setCustomPuzzleInputsOn(!1)}},"Use Cody\u2019s Puzzle Inputs")),p.a.createElement(v.j,null,p.a.createElement("div",{onClick:function(){return t.props.setCustomPuzzleInputsOn(!0)}},"Use Custom Puzzle Inputs"))))))))}}]),e}(p.a.Component)},,,,,,function(t,e,n){"use strict";var o=n(4),i=n(5),s=n(7),a=n(6),r=n(8),c=n(1),l=n.n(c),u=n(3),p=function(t){function e(){return Object(o.a)(this,e),Object(s.a)(this,Object(a.a)(e).apply(this,arguments))}return Object(r.a)(e,t),Object(i.a)(e,[{key:"render",value:function(){var t=this,e=[];return[6,7,8,9,10,11,12].forEach(function(n,o){e.push(l.a.createElement(u.f,{key:o,className:"my-2"},l.a.createElement(u.d,{body:!0},l.a.createElement(u.e,null,"Day ",n),l.a.createElement(u.c,null,l.a.createElement(u.b,{onClick:function(){return t.props.history.push("".concat("/advent-of-code-2018","/puzzle?id=Day").concat(n,"Part1"))}},"Part 1"),l.a.createElement(u.b,{onClick:function(){return t.props.history.push("".concat("/advent-of-code-2018","/puzzle?id=Day").concat(n,"Part2"))}},"Part 2")))))}),l.a.createElement("div",{className:"Home"},l.a.createElement(u.y,null,e))}}]),e}(c.Component),v=n(47),h=n.n(v),f=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={inputData:""},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"handleSubmit",value:function(t){t.preventDefault(),this.props.setStartPuzzle(!1),this.props.setCustomPuzzleInput(this.state.inputData)}},{key:"render",value:function(){var t=this;return this.props.customPuzzleInput?l.a.createElement(u.a,{className:"mt-4",color:"primary"},l.a.createElement("p",null,"You are using a Custom Puzzle Input. "),l.a.createElement("hr",null),l.a.createElement("div",null,l.a.createElement(u.b,{color:"primary",onClick:function(){t.props.setStartPuzzle(!1),t.props.setCustomPuzzleInput(null)},size:"sm"},"Edit Input")," ",l.a.createElement(u.b,{color:"primary",onClick:function(){t.props.setStartPuzzle(!1),t.props.setCustomPuzzleInput(null),t.props.setCustomPuzzleInputsOn(!1)},size:"sm"},"Use Cody's Input"))):l.a.createElement(u.m,{className:"mt-4",onSubmit:function(e){return t.handleSubmit(e)}},l.a.createElement(u.n,null,l.a.createElement(u.q,{for:"exampleText"},"Your Puzzle Input"),l.a.createElement(u.o,{className:"PuzzleInput__textarea",id:"exampleText",name:"text",onChange:function(e){return t.setState({inputData:e.target.value})},type:"textarea",value:this.state.inputData})),l.a.createElement(u.b,null,"Submit"))}}]),e}(l.a.Component),m=n(77),y=n(51),b={Day9Part2:"I started looking at making my solution efficient, and then just decided to let it run overnight. It took many hours. Click start at your own risk.",Day11Part2:"This one takes a while. Here, take this progress bar: \u23f3. Also, if you navigate away, the site\u2019s going to crash. I\u2019m too lazy to cancel my promises. \u26b0\ufe0f"},d=function(t){function e(t){var n;return Object(o.a)(this,e),(n=Object(s.a)(this,Object(a.a)(e).call(this,t))).state={customPuzzleInput:null,started:!1},n}return Object(r.a)(e,t),Object(i.a)(e,[{key:"setCustomPuzzleInput",value:function(t){this.setState({customPuzzleInput:t})}},{key:"setStartPuzzle",value:function(t){this.setState({started:t})}},{key:"render",value:function(){var t,e,o=this,i=h.a.parse(this.props.location.search).id,s=n(71)("./".concat(i)).default,a=/Day(.*?)Part(.*?)$/g.exec(i),r=a[1],c=a[2],p="Day ".concat(r,", Part ").concat(c),v=b[i],d=v?l.a.createElement("p",null,v):null,g=l.a.createElement("div",{className:"mt-4"},d,l.a.createElement(u.b,{onClick:function(){return o.setStartPuzzle(!0)}},"Start")),z=l.a.createElement(s,{customPuzzleInput:this.state.customPuzzleInput,currentPuzzleStr:i}),E=z;return this.props.customPuzzleInputsOn&&(t=l.a.createElement(f,{customPuzzleInput:this.state.customPuzzleInput,setCustomPuzzleInput:function(t){return o.setCustomPuzzleInput(t)},setCustomPuzzleInputsOn:this.props.setCustomPuzzleInputsOn,setStartPuzzle:function(t){return o.setStartPuzzle(t)}}),E=this.state.customPuzzleInput?z:null),!this.state.started&&(!this.props.customPuzzleInputsOn||this.props.customPuzzleInputsOn&&this.state.customPuzzleInput)&&(E=null,e=g),l.a.createElement("div",{className:"Puzzle"},l.a.createElement("div",{className:"text-left"},l.a.createElement("h1",null,p),l.a.createElement(m.a,{to:"".concat("/advent-of-code-2018","/")},l.a.createElement(y.a,null),l.a.createElement("span",{className:"Puzzle__back__text"},"Back"))),t,e,E)}}]),e}(l.a.Component),g=n(79),z=n(78),E=function(t){function e(){return Object(o.a)(this,e),Object(s.a)(this,Object(a.a)(e).apply(this,arguments))}return Object(r.a)(e,t),Object(i.a)(e,[{key:"render",value:function(){var t=this;return l.a.createElement(g.a,null,l.a.createElement("div",{className:"Main"},l.a.createElement(u.h,{className:"my-4 Main__container mw-100"},l.a.createElement(z.a,{exact:!0,path:"".concat("/advent-of-code-2018","/"),component:p}),l.a.createElement(z.a,{exact:!0,path:"".concat("/advent-of-code-2018","/puzzle"),render:function(e){return l.a.createElement(d,Object.assign({customPuzzleInputsOn:t.props.customPuzzleInputsOn,setCustomPuzzleInputsOn:t.props.setCustomPuzzleInputsOn},e))}}))))}}]),e}(c.Component);e.a=E},,,function(t,e,n){t.exports=n(76)},,,,,function(t,e,n){},,,function(t,e,n){},,,,,,,,,,function(t,e,n){var o={"./Day10Part1":22,"./Day10Part1.js":22,"./Day10Part2":30,"./Day10Part2.js":30,"./Day11Part1":31,"./Day11Part1.js":31,"./Day11Part2":32,"./Day11Part2.js":32,"./Day12Part1":33,"./Day12Part1.js":33,"./Day12Part2":34,"./Day12Part2.js":34,"./Day6Part1":35,"./Day6Part1.js":35,"./Day6Part2":36,"./Day6Part2.js":36,"./Day7Part1":37,"./Day7Part1.js":37,"./Day7Part2":38,"./Day7Part2.js":38,"./Day8Part1":39,"./Day8Part1.js":39,"./Day8Part2":40,"./Day8Part2.js":40,"./Day9Part1":41,"./Day9Part1.js":41,"./Day9Part2":42,"./Day9Part2.js":42};function i(t){var e=s(t);return n(e)}function s(t){var e=o[t];if(!(e+1)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return e}i.keys=function(){return Object.keys(o)},i.resolve=s,t.exports=i,i.id=71},,,,,function(t,e,n){"use strict";n.r(e);var o=n(1),i=n.n(o),s=n(14),a=n.n(s),r=(n(58),n(43));Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var c=document.getElementById("root");a.a.render(i.a.createElement(r.a,null),c),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})}],[[53,2,1]]]);
//# sourceMappingURL=main.ba922b19.chunk.js.map